
NEW VAL ADDED TO DATABASE
( 2.000000*A) =   (1.000000*D) +(2.000000)
START---- Printing Alias Database
0( 2.000000*A) =   (1.000000*D) +(2.000000)
END---- Printing Alias Database

NEW VAL ADDED TO DATABASE
( 2.000000*B) =   (1.000000*A) +(0.000000)
START---- Printing Alias Database
0( 2.000000*A) =   (1.000000*D) +(2.000000)
1( 2.000000*B) =   (1.000000*A) +(0.000000)
END---- Printing Alias Database

NEW VAL ADDED TO DATABASE
( 1.000000*C) =   (1.000000*A) +  (1.000000*B) +(0.000000)
START---- Printing Alias Database
0( 2.000000*A) =   (1.000000*D) +(2.000000)
1( 2.000000*B) =   (1.000000*A) +(0.000000)
2( 1.000000*C) =   (1.000000*A) +  (1.000000*B) +(0.000000)
END---- Printing Alias Database

NEW VAL ADDED TO DATABASE
( 1.000000*D) =   (1.000000*C) +  (1.000000*B) +(-2.000000)
START---- Printing Alias Database
0( 2.000000*A) =   (1.000000*D) +(2.000000)
1( 2.000000*B) =   (1.000000*A) +(0.000000)
2( 1.000000*C) =   (1.000000*A) +  (1.000000*B) +(0.000000)
3( 1.000000*D) =   (1.000000*C) +  (1.000000*B) +(-2.000000)
END---- Printing Alias Database

NEW VAL ADDED TO DATABASE
( -1.000000*D) =   (-2.000000*A) +(2.000000)
START---- Printing Alias Database
0( 2.000000*A) =   (1.000000*D) +(2.000000)
1( 2.000000*B) =   (1.000000*A) +(0.000000)
2( 1.000000*C) =   (1.000000*A) +  (1.000000*B) +(0.000000)
3( 1.000000*D) =   (1.000000*C) +  (1.000000*B) +(-2.000000)
4( -1.000000*D) =   (-2.000000*A) +(2.000000)
END---- Printing Alias Database

NEW VAL ADDED TO DATABASE
( -1.000000*A) =   (-2.000000*B) +(0.000000)
START---- Printing Alias Database
0( 2.000000*A) =   (1.000000*D) +(2.000000)
1( 2.000000*B) =   (1.000000*A) +(0.000000)
2( 1.000000*C) =   (1.000000*A) +  (1.000000*B) +(0.000000)
3( 1.000000*D) =   (1.000000*C) +  (1.000000*B) +(-2.000000)
4( -1.000000*D) =   (-2.000000*A) +(2.000000)
5( -1.000000*A) =   (-2.000000*B) +(0.000000)
END---- Printing Alias Database

NEW VAL ADDED TO DATABASE
( -1.000000*A) =   (1.000000*B) +  (1.000000*C) +(0.000000)
START---- Printing Alias Database
0( 2.000000*A) =   (1.000000*D) +(2.000000)
1( 2.000000*B) =   (1.000000*A) +(0.000000)
2( 1.000000*C) =   (1.000000*A) +  (1.000000*B) +(0.000000)
3( 1.000000*D) =   (1.000000*C) +  (1.000000*B) +(-2.000000)
4( -1.000000*D) =   (-2.000000*A) +(2.000000)
5( -1.000000*A) =   (-2.000000*B) +(0.000000)
6( -1.000000*A) =   (1.000000*B) +  (1.000000*C) +(0.000000)
END---- Printing Alias Database

NEW VAL ADDED TO DATABASE
( -1.000000*B) =   (1.000000*A) +  (1.000000*C) +(0.000000)
START---- Printing Alias Database
0( 2.000000*A) =   (1.000000*D) +(2.000000)
1( 2.000000*B) =   (1.000000*A) +(0.000000)
2( 1.000000*C) =   (1.000000*A) +  (1.000000*B) +(0.000000)
3( 1.000000*D) =   (1.000000*C) +  (1.000000*B) +(-2.000000)
4( -1.000000*D) =   (-2.000000*A) +(2.000000)
5( -1.000000*A) =   (-2.000000*B) +(0.000000)
6( -1.000000*A) =   (1.000000*B) +  (1.000000*C) +(0.000000)
7( -1.000000*B) =   (1.000000*A) +  (1.000000*C) +(0.000000)
END---- Printing Alias Database

NEW VAL ADDED TO DATABASE
( -1.000000*C) =   (1.000000*B) +  (1.000000*D) +(-2.000000)
START---- Printing Alias Database
0( 2.000000*A) =   (1.000000*D) +(2.000000)
1( 2.000000*B) =   (1.000000*A) +(0.000000)
2( 1.000000*C) =   (1.000000*A) +  (1.000000*B) +(0.000000)
3( 1.000000*D) =   (1.000000*C) +  (1.000000*B) +(-2.000000)
4( -1.000000*D) =   (-2.000000*A) +(2.000000)
5( -1.000000*A) =   (-2.000000*B) +(0.000000)
6( -1.000000*A) =   (1.000000*B) +  (1.000000*C) +(0.000000)
7( -1.000000*B) =   (1.000000*A) +  (1.000000*C) +(0.000000)
8( -1.000000*C) =   (1.000000*B) +  (1.000000*D) +(-2.000000)
END---- Printing Alias Database

NEW VAL ADDED TO DATABASE
( -1.000000*B) =   (1.000000*C) +  (1.000000*D) +(-2.000000)
START---- Printing Alias Database
0( 2.000000*A) =   (1.000000*D) +(2.000000)
1( 2.000000*B) =   (1.000000*A) +(0.000000)
2( 1.000000*C) =   (1.000000*A) +  (1.000000*B) +(0.000000)
3( 1.000000*D) =   (1.000000*C) +  (1.000000*B) +(-2.000000)
4( -1.000000*D) =   (-2.000000*A) +(2.000000)
5( -1.000000*A) =   (-2.000000*B) +(0.000000)
6( -1.000000*A) =   (1.000000*B) +  (1.000000*C) +(0.000000)
7( -1.000000*B) =   (1.000000*A) +  (1.000000*C) +(0.000000)
8( -1.000000*C) =   (1.000000*B) +  (1.000000*D) +(-2.000000)
9( -1.000000*B) =   (1.000000*C) +  (1.000000*D) +(-2.000000)
END---- Printing Alias Database
max combos
1
[]int{0}
[]int{3}
[]int{1}
[]int{3}


Alias Input
( 2.000000*A) =   (1.000000*D) +(2.000000)


Alias Scaled Down
( 1.000000*A) =   (0.500000*D) +(1.000000)


PseudoNamesChosen
[{[[D] [C B] [A]] [0 -2 -2] [[1] [1 1] [2]] D}]


Var Pseudo Name Pretty Printed START
Original Variable D

Pseudo Names For Var
0   [D]
1   [C B]
2   [A]

Scaled Multipliers
0   [1]
1   [1 1]
2   [2]

Lone Number Vals
0   0
1   -2
2   -2
Var Pseudo Name Pretty Printed END
Cursor Value
[]int{2}
[]string{"A"}
[]float64{2}
-2
0.5
output alias
{[{A 1}] [{A 1}] [0] [1 -1]}
output alias
{[{A 0}] [] [0] [0]}
error cleaning alias AddPseudoNameSubToDatabase
error error 
[]int{2}
[]int{3}
cursor is maxed out
input alias
( 2.000000*A) =   (1.000000*D) +(2.000000)
chosen vars
[]main.VarPseudoNames{}
cursor slice
[]int{}
{[] [] [0] [0]}
false
not a concrete solution
{[] [] [] []}
max combos
1
[]int{0}
[]int{4}
[]int{1}
[]int{4}
Alias Input
( 2.000000*B) =   (1.000000*A) +(0.000000)
Alias Scaled Down
( 1.000000*B) =   (0.500000*A) +(0.000000)
PseudoNamesChosen
[{[[A] [D] [B] [B C]] [0 1 -0 -0] [[1] [0.5] [2] [-1 1]] A}]
Var Pseudo Name Pretty Printed START
Original Variable A

Pseudo Names For Var
0   [A]
1   [D]
2   [B]
3   [B C]

Scaled Multipliers
0   [1]
1   [0.5]
2   [2]
3   [-1 1]

Lone Number Vals
0   0
1   1
2   -0
3   -0
Var Pseudo Name Pretty Printed END
Cursor Value
[]int{2}
[]string{"B"}
[]float64{2}
-0
0.5
output alias
{[{B 1}] [{B 1}] [0] [0 -0]}
output alias
{[{B 0}] [] [0] [0]}
error cleaning alias AddPseudoNameSubToDatabase
error error 
[]int{2}
[]int{4}
[]int{3}
[]int{4}
cursor is maxed out
input alias
( 2.000000*B) =   (1.000000*A) +(0.000000)
chosen vars
[]main.VarPseudoNames{}
cursor slice
[]int{}
{[] [] [0] [0]}
false
not a concrete solution
{[] [] [] []}
max combos
3
[]int{0}
[]int{4}
[]int{1}
[]int{4}
[]int{2}
[]int{4}
[]int{3}
[]int{4}
cursor is maxed out
[]int{0}
[]int{4}
[]int{1}
[]int{4}
[]int{2}
[]int{4}
[]int{3}
[]int{4}
cursor is maxed out
[]int{0, 0}
[]int{4, 4}
Alias Input
( 1.000000*C) =   (1.000000*A) +  (1.000000*B) +(0.000000)
Alias Scaled Down
( 1.000000*C) =   (1.000000*A) +  (1.000000*B) +(0.000000)
PseudoNamesChosen
[{[[A] [D] [B] [B C]] [0 1 -0 -0] [[1] [0.5] [2] [-1 1]] A} {[[B] [A] [A C] [C D]] [0 0 -0 2] [[1] [0.5] [-1 1] [-1 1]] B}]
Var Pseudo Name Pretty Printed START
Original Variable A

Pseudo Names For Var
0   [A]
1   [D]
2   [B]
3   [B C]

Scaled Multipliers
0   [1]
1   [0.5]
2   [2]
3   [-1 1]

Lone Number Vals
0   0
1   1
2   -0
3   -0
Var Pseudo Name Pretty Printed END
Var Pseudo Name Pretty Printed START
Original Variable B

Pseudo Names For Var
0   [B]
1   [A]
2   [A C]
3   [C D]

Scaled Multipliers
0   [1]
1   [0.5]
2   [-1 1]
3   [-1 1]

Lone Number Vals
0   0
1   0
2   -0
3   2
Var Pseudo Name Pretty Printed END
Cursor Value
[]int{0, 1}
[]string{"A"}
[]float64{1}
0
1
[]string{"A"}
[]float64{0.5}
0
1
output alias
( 1.000000*C) =   (1.500000*A) +(0.000000)
output alias
( 1.000000*C) =   (1.500000*A) +(0.000000)

NEW VAL ADDED TO DATABASE
( 1.000000*C) =   (1.500000*A) +(0.000000)
START---- Printing Alias Database
0( 2.000000*A) =   (1.000000*D) +(2.000000)
1( 2.000000*B) =   (1.000000*A) +(0.000000)
2( 1.000000*C) =   (1.000000*A) +  (1.000000*B) +(0.000000)
3( 1.000000*D) =   (1.000000*C) +  (1.000000*B) +(-2.000000)
4( -1.000000*D) =   (-2.000000*A) +(2.000000)
5( -1.000000*A) =   (-2.000000*B) +(0.000000)
6( -1.000000*A) =   (1.000000*B) +  (1.000000*C) +(0.000000)
7( -1.000000*B) =   (1.000000*A) +  (1.000000*C) +(0.000000)
8( -1.000000*C) =   (1.000000*B) +  (1.000000*D) +(-2.000000)
9( -1.000000*B) =   (1.000000*C) +  (1.000000*D) +(-2.000000)
10( 1.000000*C) =   (1.500000*A) +(0.000000)
END---- Printing Alias Database
[]int{0, 1}
[]int{4, 4}
Alias Input
( 1.000000*C) =   (1.000000*A) +  (1.000000*B) +(0.000000)
Alias Scaled Down
( 1.000000*C) =   (1.000000*A) +  (1.000000*B) +(0.000000)
PseudoNamesChosen
[{[[A] [D] [B] [B C]] [0 1 -0 -0] [[1] [0.5] [2] [-1 1]] A} {[[B] [A] [A C] [C D]] [0 0 -0 2] [[1] [0.5] [-1 1] [-1 1]] B}]
Var Pseudo Name Pretty Printed START
Original Variable A

Pseudo Names For Var
0   [A]
1   [D]
2   [B]
3   [B C]

Scaled Multipliers
0   [1]
1   [0.5]
2   [2]
3   [-1 1]

Lone Number Vals
0   0
1   1
2   -0
3   -0
Var Pseudo Name Pretty Printed END
Var Pseudo Name Pretty Printed START
Original Variable B

Pseudo Names For Var
0   [B]
1   [A]
2   [A C]
3   [C D]

Scaled Multipliers
0   [1]
1   [0.5]
2   [-1 1]
3   [-1 1]

Lone Number Vals
0   0
1   0
2   -0
3   2
Var Pseudo Name Pretty Printed END
Cursor Value
[]int{0, 2}
[]string{"A"}
[]float64{1}
0
1
[]string{"A", "C"}
[]float64{-1, 1}
-0
1
output alias
{[{C 1}] [{A 1} {A -1} {C 1}] [0] [0 0 -0]}
output alias
{[{C 0}] [] [0] [0]}
error cleaning alias AddPseudoNameSubToDatabase
error error 
[]int{0, 2}
[]int{4, 4}
[]int{0, 3}
[]int{4, 4}
[]int{1, 0}
[]int{4, 4}
[]int{1, 1}
[]int{4, 4}
[]int{1, 2}
[]int{4, 4}
Alias Input
( 1.000000*C) =   (1.000000*A) +  (1.000000*B) +(0.000000)
Alias Scaled Down
( 1.000000*C) =   (1.000000*A) +  (1.000000*B) +(0.000000)
PseudoNamesChosen
[{[[A] [D] [B] [B C]] [0 1 -0 -0] [[1] [0.5] [2] [-1 1]] A} {[[B] [A] [A C] [C D]] [0 0 -0 2] [[1] [0.5] [-1 1] [-1 1]] B}]
Var Pseudo Name Pretty Printed START
Original Variable A

Pseudo Names For Var
0   [A]
1   [D]
2   [B]
3   [B C]

Scaled Multipliers
0   [1]
1   [0.5]
2   [2]
3   [-1 1]

Lone Number Vals
0   0
1   1
2   -0
3   -0
Var Pseudo Name Pretty Printed END
Var Pseudo Name Pretty Printed START
Original Variable B

Pseudo Names For Var
0   [B]
1   [A]
2   [A C]
3   [C D]

Scaled Multipliers
0   [1]
1   [0.5]
2   [-1 1]
3   [-1 1]

Lone Number Vals
0   0
1   0
2   -0
3   2
Var Pseudo Name Pretty Printed END
Cursor Value
[]int{1, 3}
[]string{"D"}
[]float64{0.5}
1
1
[]string{"C", "D"}
[]float64{-1, 1}
2
1
output alias
( 2.000000*C) =   (1.500000*D) +(3.000000)
output alias
( 2.000000*C) =   (1.500000*D) +(3.000000)

NEW VAL ADDED TO DATABASE
( 2.000000*C) =   (1.500000*D) +(3.000000)
START---- Printing Alias Database
0( 2.000000*A) =   (1.000000*D) +(2.000000)
1( 2.000000*B) =   (1.000000*A) +(0.000000)
2( 1.000000*C) =   (1.000000*A) +  (1.000000*B) +(0.000000)
3( 1.000000*D) =   (1.000000*C) +  (1.000000*B) +(-2.000000)
4( -1.000000*D) =   (-2.000000*A) +(2.000000)
5( -1.000000*A) =   (-2.000000*B) +(0.000000)
6( -1.000000*A) =   (1.000000*B) +  (1.000000*C) +(0.000000)
7( -1.000000*B) =   (1.000000*A) +  (1.000000*C) +(0.000000)
8( -1.000000*C) =   (1.000000*B) +  (1.000000*D) +(-2.000000)
9( -1.000000*B) =   (1.000000*C) +  (1.000000*D) +(-2.000000)
10( 1.000000*C) =   (1.500000*A) +(0.000000)
11( 2.000000*C) =   (1.500000*D) +(3.000000)
END---- Printing Alias Database
[]int{1, 3}
[]int{4, 4}
Alias Input
( 1.000000*C) =   (1.000000*A) +  (1.000000*B) +(0.000000)
Alias Scaled Down
( 1.000000*C) =   (1.000000*A) +  (1.000000*B) +(0.000000)
PseudoNamesChosen
[{[[A] [D] [B] [B C]] [0 1 -0 -0] [[1] [0.5] [2] [-1 1]] A} {[[B] [A] [A C] [C D]] [0 0 -0 2] [[1] [0.5] [-1 1] [-1 1]] B}]
Var Pseudo Name Pretty Printed START
Original Variable A

Pseudo Names For Var
0   [A]
1   [D]
2   [B]
3   [B C]

Scaled Multipliers
0   [1]
1   [0.5]
2   [2]
3   [-1 1]

Lone Number Vals
0   0
1   1
2   -0
3   -0
Var Pseudo Name Pretty Printed END
Var Pseudo Name Pretty Printed START
Original Variable B

Pseudo Names For Var
0   [B]
1   [A]
2   [A C]
3   [C D]

Scaled Multipliers
0   [1]
1   [0.5]
2   [-1 1]
3   [-1 1]

Lone Number Vals
0   0
1   0
2   -0
3   2
Var Pseudo Name Pretty Printed END
Cursor Value
[]int{2, 0}
[]string{"B"}
[]float64{2}
-0
1
[]string{"B"}
[]float64{1}
0
1
output alias
( 1.000000*C) =   (3.000000*B) +(0.000000)
output alias
( 1.000000*C) =   (3.000000*B) +(0.000000)

NEW VAL ADDED TO DATABASE
( 1.000000*C) =   (3.000000*B) +(0.000000)
START---- Printing Alias Database
0( 2.000000*A) =   (1.000000*D) +(2.000000)
1( 2.000000*B) =   (1.000000*A) +(0.000000)
2( 1.000000*C) =   (1.000000*A) +  (1.000000*B) +(0.000000)
3( 1.000000*D) =   (1.000000*C) +  (1.000000*B) +(-2.000000)
4( -1.000000*D) =   (-2.000000*A) +(2.000000)
5( -1.000000*A) =   (-2.000000*B) +(0.000000)
6( -1.000000*A) =   (1.000000*B) +  (1.000000*C) +(0.000000)
7( -1.000000*B) =   (1.000000*A) +  (1.000000*C) +(0.000000)
8( -1.000000*C) =   (1.000000*B) +  (1.000000*D) +(-2.000000)
9( -1.000000*B) =   (1.000000*C) +  (1.000000*D) +(-2.000000)
10( 1.000000*C) =   (1.500000*A) +(0.000000)
11( 2.000000*C) =   (1.500000*D) +(3.000000)
12( 1.000000*C) =   (3.000000*B) +(0.000000)
END---- Printing Alias Database
[]int{2, 0}
[]int{4, 4}
[]int{2, 1}
[]int{4, 4}
[]int{2, 2}
[]int{4, 4}
[]int{2, 3}
[]int{4, 4}
Alias Input
( 1.000000*C) =   (1.000000*A) +  (1.000000*B) +(0.000000)
Alias Scaled Down
( 1.000000*C) =   (1.000000*A) +  (1.000000*B) +(0.000000)
PseudoNamesChosen
[{[[A] [D] [B] [B C]] [0 1 -0 -0] [[1] [0.5] [2] [-1 1]] A} {[[B] [A] [A C] [C D]] [0 0 -0 2] [[1] [0.5] [-1 1] [-1 1]] B}]
Var Pseudo Name Pretty Printed START
Original Variable A

Pseudo Names For Var
0   [A]
1   [D]
2   [B]
3   [B C]

Scaled Multipliers
0   [1]
1   [0.5]
2   [2]
3   [-1 1]

Lone Number Vals
0   0
1   1
2   -0
3   -0
Var Pseudo Name Pretty Printed END
Var Pseudo Name Pretty Printed START
Original Variable B

Pseudo Names For Var
0   [B]
1   [A]
2   [A C]
3   [C D]

Scaled Multipliers
0   [1]
1   [0.5]
2   [-1 1]
3   [-1 1]

Lone Number Vals
0   0
1   0
2   -0
3   2
Var Pseudo Name Pretty Printed END
Cursor Value
[]int{3, 0}
[]string{"B", "C"}
[]float64{-1, 1}
-0
1
[]string{"B"}
[]float64{1}
0
1
output alias
{[{C 1}] [{B -1} {C 1} {B 1}] [0] [0 -0 0]}
output alias
{[{C 0}] [] [0] [0]}
error cleaning alias AddPseudoNameSubToDatabase
error error 
[]int{3, 0}
[]int{4, 4}
[]int{3, 1}
[]int{4, 4}
[]int{3, 2}
[]int{4, 4}
[]int{3, 3}
[]int{4, 4}
cursor is maxed out
input alias
( 1.000000*C) =   (1.000000*A) +  (1.000000*B) +(0.000000)
chosen vars
[]main.VarPseudoNames{main.VarPseudoNames{PseudoNames:[][]string{[]string{"A"}, []string{"D"}, []string{"B"}, []string{"B", "C"}}, LoneNumberVals:[]float64{0, 1, -0, -0}, ScaledDownMultipliers:[][]float64{[]float64{1}, []float64{0.5}, []float64{2}, []float64{-1, 1}}, ParentVar:"A"}, main.VarPseudoNames{PseudoNames:[][]string{[]string{"B"}, []string{"A"}, []string{"A", "C"}, []string{"C", "D"}}, LoneNumberVals:[]float64{0, 0, -0, 2}, ScaledDownMultipliers:[][]float64{[]float64{1}, []float64{0.5}, []float64{-1, 1}, []float64{-1, 1}}, ParentVar:"B"}}
cursor slice
[]int{0, 1}
[]string{"A"}
[]float64{1}
0
1
[]string{"A"}
[]float64{0.5}
0
1
( 1.000000*C) =   (1.500000*A) +(0.000000)
true
not a concrete solution
{[{C 1}] [{A 1.5}] [0] [0]}
max combos
3
[]int{0}
[]int{4}
[]int{1}
[]int{4}
[]int{2}
[]int{4}
[]int{3}
[]int{4}
cursor is maxed out
[]int{0}
[]int{6}
[]int{1}
[]int{6}
[]int{2}
[]int{6}
[]int{3}
[]int{6}
Alias Input
( 1.000000*D) =   (1.000000*C) +  (1.000000*B) +(-2.000000)
Alias Scaled Down
( 1.000000*D) =   (1.000000*C) +  (1.000000*B) +(-2.000000)
PseudoNamesChosen
[{[[C] [A B] [B D] [A] [D] [B]] [0 0 2 0 1.5 0] [[1] [1 1] [-1 1] [1.5] [0.75] [3]] C}]
Var Pseudo Name Pretty Printed START
Original Variable C

Pseudo Names For Var
0   [C]
1   [A B]
2   [B D]
3   [A]
4   [D]
5   [B]

Scaled Multipliers
0   [1]
1   [1 1]
2   [-1 1]
3   [1.5]
4   [0.75]
5   [3]

Lone Number Vals
0   0
1   0
2   2
3   0
4   1.5
5   0
Var Pseudo Name Pretty Printed END
Cursor Value
[]int{4}
[]string{"D"}
[]float64{0.75}
1.5
1
output alias
{[{D 1}] [{D 0.75}] [0] [-2 1.5]}
output alias
{[{D 0.25}] [] [0] [-0.5]}

NEW VAL ADDED TO DATABASE
{[{D 0.25}] [] [0] [-0.5]}
START---- Printing Alias Database
0( 2.000000*A) =   (1.000000*D) +(2.000000)
1( 2.000000*B) =   (1.000000*A) +(0.000000)
2( 1.000000*C) =   (1.000000*A) +  (1.000000*B) +(0.000000)
3( 1.000000*D) =   (1.000000*C) +  (1.000000*B) +(-2.000000)
4( -1.000000*D) =   (-2.000000*A) +(2.000000)
5( -1.000000*A) =   (-2.000000*B) +(0.000000)
6( -1.000000*A) =   (1.000000*B) +  (1.000000*C) +(0.000000)
7( -1.000000*B) =   (1.000000*A) +  (1.000000*C) +(0.000000)
8( -1.000000*C) =   (1.000000*B) +  (1.000000*D) +(-2.000000)
9( -1.000000*B) =   (1.000000*C) +  (1.000000*D) +(-2.000000)
10( 1.000000*C) =   (1.500000*A) +(0.000000)
11( 2.000000*C) =   (1.500000*D) +(3.000000)
12( 1.000000*C) =   (3.000000*B) +(0.000000)
13{[{D 0.25}] [] [0] [-0.5]}
END---- Printing Alias Database
[]int{4}
[]int{6}
[]int{5}
[]int{6}
cursor is maxed out
[]int{0, 0}
[]int{6, 4}
[]int{0, 1}
[]int{6, 4}
[]int{0, 2}
[]int{6, 4}
Alias Input
( 1.000000*D) =   (1.000000*C) +  (1.000000*B) +(-2.000000)
Alias Scaled Down
( 1.000000*D) =   (1.000000*C) +  (1.000000*B) +(-2.000000)
PseudoNamesChosen
[{[[C] [A B] [B D] [A] [D] [B]] [0 0 2 0 1.5 0] [[1] [1 1] [-1 1] [1.5] [0.75] [3]] C} {[[B] [A] [A C] [C D]] [0 0 -0 2] [[1] [0.5] [-1 1] [-1 1]] B}]
Var Pseudo Name Pretty Printed START
Original Variable C

Pseudo Names For Var
0   [C]
1   [A B]
2   [B D]
3   [A]
4   [D]
5   [B]

Scaled Multipliers
0   [1]
1   [1 1]
2   [-1 1]
3   [1.5]
4   [0.75]
5   [3]

Lone Number Vals
0   0
1   0
2   2
3   0
4   1.5
5   0
Var Pseudo Name Pretty Printed END
Var Pseudo Name Pretty Printed START
Original Variable B

Pseudo Names For Var
0   [B]
1   [A]
2   [A C]
3   [C D]

Scaled Multipliers
0   [1]
1   [0.5]
2   [-1 1]
3   [-1 1]

Lone Number Vals
0   0
1   0
2   -0
3   2
Var Pseudo Name Pretty Printed END
Cursor Value
[]int{0, 3}
[]string{"C"}
[]float64{1}
0
1
[]string{"C", "D"}
[]float64{-1, 1}
2
1
output alias
{[{D 1}] [{C 1} {C -1} {D 1}] [0] [-2 0 2]}
output alias
{[{D 0}] [] [0] [0]}
error cleaning alias AddPseudoNameSubToDatabase
error error 
[]int{0, 3}
[]int{6, 4}
[]int{1, 0}
[]int{6, 4}
[]int{1, 1}
[]int{6, 4}
[]int{1, 2}
[]int{6, 4}
[]int{1, 3}
[]int{6, 4}
Alias Input
( 1.000000*D) =   (1.000000*C) +  (1.000000*B) +(-2.000000)
Alias Scaled Down
( 1.000000*D) =   (1.000000*C) +  (1.000000*B) +(-2.000000)
PseudoNamesChosen
[{[[C] [A B] [B D] [A] [D] [B]] [0 0 2 0 1.5 0] [[1] [1 1] [-1 1] [1.5] [0.75] [3]] C} {[[B] [A] [A C] [C D]] [0 0 -0 2] [[1] [0.5] [-1 1] [-1 1]] B}]
Var Pseudo Name Pretty Printed START
Original Variable C

Pseudo Names For Var
0   [C]
1   [A B]
2   [B D]
3   [A]
4   [D]
5   [B]

Scaled Multipliers
0   [1]
1   [1 1]
2   [-1 1]
3   [1.5]
4   [0.75]
5   [3]

Lone Number Vals
0   0
1   0
2   2
3   0
4   1.5
5   0
Var Pseudo Name Pretty Printed END
Var Pseudo Name Pretty Printed START
Original Variable B

Pseudo Names For Var
0   [B]
1   [A]
2   [A C]
3   [C D]

Scaled Multipliers
0   [1]
1   [0.5]
2   [-1 1]
3   [-1 1]

Lone Number Vals
0   0
1   0
2   -0
3   2
Var Pseudo Name Pretty Printed END
Cursor Value
[]int{2, 0}
[]string{"B", "D"}
[]float64{-1, 1}
2
1
[]string{"B"}
[]float64{1}
0
1
output alias
{[{D 1}] [{B -1} {D 1} {B 1}] [0] [-2 2 0]}
output alias
{[{D 0}] [] [0] [0]}
error cleaning alias AddPseudoNameSubToDatabase
error error 
[]int{2, 0}
[]int{6, 4}
[]int{2, 1}
[]int{6, 4}
[]int{2, 2}
[]int{6, 4}
[]int{2, 3}
[]int{6, 4}
[]int{3, 0}
[]int{6, 4}
Alias Input
( 1.000000*D) =   (1.000000*C) +  (1.000000*B) +(-2.000000)
Alias Scaled Down
( 1.000000*D) =   (1.000000*C) +  (1.000000*B) +(-2.000000)
PseudoNamesChosen
[{[[C] [A B] [B D] [A] [D] [B]] [0 0 2 0 1.5 0] [[1] [1 1] [-1 1] [1.5] [0.75] [3]] C} {[[B] [A] [A C] [C D]] [0 0 -0 2] [[1] [0.5] [-1 1] [-1 1]] B}]
Var Pseudo Name Pretty Printed START
Original Variable C

Pseudo Names For Var
0   [C]
1   [A B]
2   [B D]
3   [A]
4   [D]
5   [B]

Scaled Multipliers
0   [1]
1   [1 1]
2   [-1 1]
3   [1.5]
4   [0.75]
5   [3]

Lone Number Vals
0   0
1   0
2   2
3   0
4   1.5
5   0
Var Pseudo Name Pretty Printed END
Var Pseudo Name Pretty Printed START
Original Variable B

Pseudo Names For Var
0   [B]
1   [A]
2   [A C]
3   [C D]

Scaled Multipliers
0   [1]
1   [0.5]
2   [-1 1]
3   [-1 1]

Lone Number Vals
0   0
1   0
2   -0
3   2
Var Pseudo Name Pretty Printed END
Cursor Value
[]int{3, 1}
[]string{"A"}
[]float64{1.5}
0
1
[]string{"A"}
[]float64{0.5}
0
1
output alias
( 1.000000*D) =   (2.000000*A) +(-2.000000)
output alias
( 1.000000*D) =   (2.000000*A) +(-2.000000)
[]int{3, 1}
[]int{6, 4}
[]int{3, 2}
[]int{6, 4}
[]int{3, 3}
[]int{6, 4}
Alias Input
( 1.000000*D) =   (1.000000*C) +  (1.000000*B) +(-2.000000)
Alias Scaled Down
( 1.000000*D) =   (1.000000*C) +  (1.000000*B) +(-2.000000)
PseudoNamesChosen
[{[[C] [A B] [B D] [A] [D] [B]] [0 0 2 0 1.5 0] [[1] [1 1] [-1 1] [1.5] [0.75] [3]] C} {[[B] [A] [A C] [C D]] [0 0 -0 2] [[1] [0.5] [-1 1] [-1 1]] B}]
Var Pseudo Name Pretty Printed START
Original Variable C

Pseudo Names For Var
0   [C]
1   [A B]
2   [B D]
3   [A]
4   [D]
5   [B]

Scaled Multipliers
0   [1]
1   [1 1]
2   [-1 1]
3   [1.5]
4   [0.75]
5   [3]

Lone Number Vals
0   0
1   0
2   2
3   0
4   1.5
5   0
Var Pseudo Name Pretty Printed END
Var Pseudo Name Pretty Printed START
Original Variable B

Pseudo Names For Var
0   [B]
1   [A]
2   [A C]
3   [C D]

Scaled Multipliers
0   [1]
1   [0.5]
2   [-1 1]
3   [-1 1]

Lone Number Vals
0   0
1   0
2   -0
3   2
Var Pseudo Name Pretty Printed END
Cursor Value
[]int{4, 0}
[]string{"D"}
[]float64{0.75}
1.5
1
[]string{"B"}
[]float64{1}
0
1
output alias
( 0.250000*D) =   (1.000000*B) +(-0.500000)
output alias
( 0.250000*D) =   (1.000000*B) +(-0.500000)

NEW VAL ADDED TO DATABASE
( 0.250000*D) =   (1.000000*B) +(-0.500000)
START---- Printing Alias Database
0( 2.000000*A) =   (1.000000*D) +(2.000000)
1( 2.000000*B) =   (1.000000*A) +(0.000000)
2( 1.000000*C) =   (1.000000*A) +  (1.000000*B) +(0.000000)
3( 1.000000*D) =   (1.000000*C) +  (1.000000*B) +(-2.000000)
4( -1.000000*D) =   (-2.000000*A) +(2.000000)
5( -1.000000*A) =   (-2.000000*B) +(0.000000)
6( -1.000000*A) =   (1.000000*B) +  (1.000000*C) +(0.000000)
7( -1.000000*B) =   (1.000000*A) +  (1.000000*C) +(0.000000)
8( -1.000000*C) =   (1.000000*B) +  (1.000000*D) +(-2.000000)
9( -1.000000*B) =   (1.000000*C) +  (1.000000*D) +(-2.000000)
10( 1.000000*C) =   (1.500000*A) +(0.000000)
11( 2.000000*C) =   (1.500000*D) +(3.000000)
12( 1.000000*C) =   (3.000000*B) +(0.000000)
13{[{D 0.25}] [] [0] [-0.5]}
14( 0.250000*D) =   (1.000000*B) +(-0.500000)
END---- Printing Alias Database
[]int{4, 0}
[]int{6, 4}
Alias Input
( 1.000000*D) =   (1.000000*C) +  (1.000000*B) +(-2.000000)
Alias Scaled Down
( 1.000000*D) =   (1.000000*C) +  (1.000000*B) +(-2.000000)
PseudoNamesChosen
[{[[C] [A B] [B D] [A] [D] [B]] [0 0 2 0 1.5 0] [[1] [1 1] [-1 1] [1.5] [0.75] [3]] C} {[[B] [A] [A C] [C D]] [0 0 -0 2] [[1] [0.5] [-1 1] [-1 1]] B}]
Var Pseudo Name Pretty Printed START
Original Variable C

Pseudo Names For Var
0   [C]
1   [A B]
2   [B D]
3   [A]
4   [D]
5   [B]

Scaled Multipliers
0   [1]
1   [1 1]
2   [-1 1]
3   [1.5]
4   [0.75]
5   [3]

Lone Number Vals
0   0
1   0
2   2
3   0
4   1.5
5   0
Var Pseudo Name Pretty Printed END
Var Pseudo Name Pretty Printed START
Original Variable B

Pseudo Names For Var
0   [B]
1   [A]
2   [A C]
3   [C D]

Scaled Multipliers
0   [1]
1   [0.5]
2   [-1 1]
3   [-1 1]

Lone Number Vals
0   0
1   0
2   -0
3   2
Var Pseudo Name Pretty Printed END
Cursor Value
[]int{4, 1}
[]string{"D"}
[]float64{0.75}
1.5
1
[]string{"A"}
[]float64{0.5}
0
1
output alias
( 0.250000*D) =   (0.500000*A) +(-0.500000)
output alias
( 0.250000*D) =   (0.500000*A) +(-0.500000)
[]int{4, 1}
[]int{6, 4}
[]int{4, 2}
[]int{6, 4}
Alias Input
( 1.000000*D) =   (1.000000*C) +  (1.000000*B) +(-2.000000)
Alias Scaled Down
( 1.000000*D) =   (1.000000*C) +  (1.000000*B) +(-2.000000)
PseudoNamesChosen
[{[[C] [A B] [B D] [A] [D] [B]] [0 0 2 0 1.5 0] [[1] [1 1] [-1 1] [1.5] [0.75] [3]] C} {[[B] [A] [A C] [C D]] [0 0 -0 2] [[1] [0.5] [-1 1] [-1 1]] B}]
Var Pseudo Name Pretty Printed START
Original Variable C

Pseudo Names For Var
0   [C]
1   [A B]
2   [B D]
3   [A]
4   [D]
5   [B]

Scaled Multipliers
0   [1]
1   [1 1]
2   [-1 1]
3   [1.5]
4   [0.75]
5   [3]

Lone Number Vals
0   0
1   0
2   2
3   0
4   1.5
5   0
Var Pseudo Name Pretty Printed END
Var Pseudo Name Pretty Printed START
Original Variable B

Pseudo Names For Var
0   [B]
1   [A]
2   [A C]
3   [C D]

Scaled Multipliers
0   [1]
1   [0.5]
2   [-1 1]
3   [-1 1]

Lone Number Vals
0   0
1   0
2   -0
3   2
Var Pseudo Name Pretty Printed END
Cursor Value
[]int{4, 3}
[]string{"D"}
[]float64{0.75}
1.5
1
[]string{"C", "D"}
[]float64{-1, 1}
2
1
output alias
( -0.750000*D) =   (-1.000000*C) +(1.500000)
output alias
( -0.750000*D) =   (-1.000000*C) +(1.500000)

NEW VAL ADDED TO DATABASE
( -0.750000*D) =   (-1.000000*C) +(1.500000)
START---- Printing Alias Database
0( 2.000000*A) =   (1.000000*D) +(2.000000)
1( 2.000000*B) =   (1.000000*A) +(0.000000)
2( 1.000000*C) =   (1.000000*A) +  (1.000000*B) +(0.000000)
3( 1.000000*D) =   (1.000000*C) +  (1.000000*B) +(-2.000000)
4( -1.000000*D) =   (-2.000000*A) +(2.000000)
5( -1.000000*A) =   (-2.000000*B) +(0.000000)
6( -1.000000*A) =   (1.000000*B) +  (1.000000*C) +(0.000000)
7( -1.000000*B) =   (1.000000*A) +  (1.000000*C) +(0.000000)
8( -1.000000*C) =   (1.000000*B) +  (1.000000*D) +(-2.000000)
9( -1.000000*B) =   (1.000000*C) +  (1.000000*D) +(-2.000000)
10( 1.000000*C) =   (1.500000*A) +(0.000000)
11( 2.000000*C) =   (1.500000*D) +(3.000000)
12( 1.000000*C) =   (3.000000*B) +(0.000000)
13{[{D 0.25}] [] [0] [-0.5]}
14( 0.250000*D) =   (1.000000*B) +(-0.500000)
15( -0.750000*D) =   (-1.000000*C) +(1.500000)
END---- Printing Alias Database
[]int{4, 3}
[]int{6, 4}
Alias Input
( 1.000000*D) =   (1.000000*C) +  (1.000000*B) +(-2.000000)
Alias Scaled Down
( 1.000000*D) =   (1.000000*C) +  (1.000000*B) +(-2.000000)
PseudoNamesChosen
[{[[C] [A B] [B D] [A] [D] [B]] [0 0 2 0 1.5 0] [[1] [1 1] [-1 1] [1.5] [0.75] [3]] C} {[[B] [A] [A C] [C D]] [0 0 -0 2] [[1] [0.5] [-1 1] [-1 1]] B}]
Var Pseudo Name Pretty Printed START
Original Variable C

Pseudo Names For Var
0   [C]
1   [A B]
2   [B D]
3   [A]
4   [D]
5   [B]

Scaled Multipliers
0   [1]
1   [1 1]
2   [-1 1]
3   [1.5]
4   [0.75]
5   [3]

Lone Number Vals
0   0
1   0
2   2
3   0
4   1.5
5   0
Var Pseudo Name Pretty Printed END
Var Pseudo Name Pretty Printed START
Original Variable B

Pseudo Names For Var
0   [B]
1   [A]
2   [A C]
3   [C D]

Scaled Multipliers
0   [1]
1   [0.5]
2   [-1 1]
3   [-1 1]

Lone Number Vals
0   0
1   0
2   -0
3   2
Var Pseudo Name Pretty Printed END
Cursor Value
[]int{5, 0}
[]string{"B"}
[]float64{3}
0
1
[]string{"B"}
[]float64{1}
0
1
output alias
( 1.000000*D) =   (4.000000*B) +(-2.000000)
output alias
( 1.000000*D) =   (4.000000*B) +(-2.000000)
[]int{5, 0}
[]int{6, 4}
[]int{5, 1}
[]int{6, 4}
[]int{5, 2}
[]int{6, 4}
[]int{5, 3}
[]int{6, 4}
cursor is maxed out
input alias
( 1.000000*D) =   (1.000000*C) +  (1.000000*B) +(-2.000000)
chosen vars
[]main.VarPseudoNames{main.VarPseudoNames{PseudoNames:[][]string{[]string{"C"}, []string{"A", "B"}, []string{"B", "D"}, []string{"A"}, []string{"D"}, []string{"B"}}, LoneNumberVals:[]float64{0, 0, 2, 0, 1.5, 0}, ScaledDownMultipliers:[][]float64{[]float64{1}, []float64{1, 1}, []float64{-1, 1}, []float64{1.5}, []float64{0.75}, []float64{3}}, ParentVar:"C"}}
cursor slice
[]int{4}
[]string{"D"}
[]float64{0.75}
1.5
1
{[{D 0.25}] [] [0] [-0.5]}
true
max combos
1
[]int{0}
[]int{4}
Alias Input
hello!!!!
( -1.000000*D) =   (-2.000000*A) +(2.000000)
main.ConcreteSolution{Name:"D", Value:-0.5}
Alias Scaled Down
( 1.000000*D) =   (2.000000*A) +(-2.000000)
PseudoNamesChosen
[{[[A] [D] [B] [B C]] [0 1 -0 -0] [[1] [0.5] [2] [-1 1]] A}]
Var Pseudo Name Pretty Printed START
Original Variable A

Pseudo Names For Var
0   [A]
1   [D]
2   [B]
3   [B C]

Scaled Multipliers
0   [1]
1   [0.5]
2   [2]
3   [-1 1]

Lone Number Vals
0   0
1   1
2   -0
3   -0
Var Pseudo Name Pretty Printed END
Cursor Value
[]int{1}
[]string{"D"}
[]float64{0.5}
1
2
output alias
{[{D 1}] [{D 1}] [-0] [-2 2]}
output alias
{[{D 0}] [] [-0] [0]}
error cleaning alias AddPseudoNameSubToDatabase
error error 
[]int{1}
[]int{4}
[]int{2}
[]int{4}
[]int{3}
[]int{4}
cursor is maxed out
input alias
( -1.000000*D) =   (-2.000000*A) +(2.000000)
chosen vars
[]main.VarPseudoNames{}
cursor slice
[]int{}
{[] [] [0] [0]}
false
not a concrete solution
{[] [] [] []}
max combos
1
[]int{0}
[]int{4}
Alias Input
( -1.000000*A) =   (-2.000000*B) +(0.000000)
Alias Scaled Down
( 1.000000*A) =   (2.000000*B) +(0.000000)
PseudoNamesChosen
[{[[B] [A] [A C] [C D]] [0 0 -0 2] [[1] [0.5] [-1 1] [-1 1]] B}]
Var Pseudo Name Pretty Printed START
Original Variable B

Pseudo Names For Var
0   [B]
1   [A]
2   [A C]
3   [C D]

Scaled Multipliers
0   [1]
1   [0.5]
2   [-1 1]
3   [-1 1]

Lone Number Vals
0   0
1   0
2   -0
3   2
Var Pseudo Name Pretty Printed END
Cursor Value
[]int{1}
[]string{"A"}
[]float64{0.5}
0
2
output alias
{[{A 1}] [{A 1}] [-0] [-0 0]}
output alias
{[{A 0}] [] [-0] [0]}
error cleaning alias AddPseudoNameSubToDatabase
error error 
[]int{1}
[]int{4}
[]int{2}
[]int{4}
[]int{3}
[]int{4}
cursor is maxed out
input alias
( -1.000000*A) =   (-2.000000*B) +(0.000000)
chosen vars
[]main.VarPseudoNames{}
cursor slice
[]int{}
{[] [] [0] [0]}
false
not a concrete solution
{[] [] [] []}
max combos
3
[]int{0}
[]int{6}
[]int{1}
[]int{6}
[]int{2}
[]int{6}
Alias Input
( -1.000000*A) =   (1.000000*B) +  (1.000000*C) +(0.000000)
Alias Scaled Down
( 1.000000*A) =   (-1.000000*B) +  (-1.000000*C) +(0.000000)
PseudoNamesChosen
[{[[C] [A B] [B D] [A] [D] [B]] [0 0 2 0 1.5 0] [[1] [1 1] [-1 1] [1.5] [0.75] [3]] C}]
Var Pseudo Name Pretty Printed START
Original Variable C

Pseudo Names For Var
0   [C]
1   [A B]
2   [B D]
3   [A]
4   [D]
5   [B]

Scaled Multipliers
0   [1]
1   [1 1]
2   [-1 1]
3   [1.5]
4   [0.75]
5   [3]

Lone Number Vals
0   0
1   0
2   2
3   0
4   1.5
5   0
Var Pseudo Name Pretty Printed END
Cursor Value
[]int{3}
[]string{"A"}
[]float64{1.5}
0
1
output alias
{[{A 1}] [{A 1.5}] [-0] [-0 0]}
output alias
{[{A -0.5}] [] [-0] [0]}

NEW VAL ADDED TO DATABASE
{[{A -0.5}] [] [-0] [0]}
START---- Printing Alias Database
0( 2.000000*A) =   (1.000000*D) +(2.000000)
1( 2.000000*B) =   (1.000000*A) +(0.000000)
2( 1.000000*C) =   (1.000000*A) +  (1.000000*B) +(0.000000)
3( 1.000000*D) =   (1.000000*C) +  (1.000000*B) +(-2.000000)
4( -1.000000*D) =   (-2.000000*A) +(2.000000)
5( -1.000000*A) =   (-2.000000*B) +(0.000000)
6( -1.000000*A) =   (1.000000*B) +  (1.000000*C) +(0.000000)
7( -1.000000*B) =   (1.000000*A) +  (1.000000*C) +(0.000000)
8( -1.000000*C) =   (1.000000*B) +  (1.000000*D) +(-2.000000)
9( -1.000000*B) =   (1.000000*C) +  (1.000000*D) +(-2.000000)
10( 1.000000*C) =   (1.500000*A) +(0.000000)
11( 2.000000*C) =   (1.500000*D) +(3.000000)
12( 1.000000*C) =   (3.000000*B) +(0.000000)
13{[{D 0.25}] [] [0] [-0.5]}
14( 0.250000*D) =   (1.000000*B) +(-0.500000)
15( -0.750000*D) =   (-1.000000*C) +(1.500000)
16{[{A -0.5}] [] [-0] [0]}
END---- Printing Alias Database
[]int{3}
[]int{6}
[]int{4}
[]int{6}
[]int{5}
[]int{6}
cursor is maxed out
[]int{0}
[]int{4}
Alias Input
( -1.000000*A) =   (1.000000*B) +  (1.000000*C) +(0.000000)
Alias Scaled Down
( 1.000000*A) =   (-1.000000*B) +  (-1.000000*C) +(0.000000)
PseudoNamesChosen
[{[[B] [A] [A C] [C D]] [0 0 -0 2] [[1] [0.5] [-1 1] [-1 1]] B}]
Var Pseudo Name Pretty Printed START
Original Variable B

Pseudo Names For Var
0   [B]
1   [A]
2   [A C]
3   [C D]

Scaled Multipliers
0   [1]
1   [0.5]
2   [-1 1]
3   [-1 1]

Lone Number Vals
0   0
1   0
2   -0
3   2
Var Pseudo Name Pretty Printed END
Cursor Value
[]int{1}
[]string{"A"}
[]float64{0.5}
0
-1
output alias
{[{A 1}] [{A -0.5}] [-0] [-0 -0]}
output alias
{[{A 1.5}] [] [-0] [0]}
[]int{1}
[]int{4}
[]int{2}
[]int{4}
[]int{3}
[]int{4}
cursor is maxed out
[]int{0, 0}
[]int{4, 6}
Alias Input
( -1.000000*A) =   (1.000000*B) +  (1.000000*C) +(0.000000)
Alias Scaled Down
( 1.000000*A) =   (-1.000000*B) +  (-1.000000*C) +(0.000000)
PseudoNamesChosen
[{[[B] [A] [A C] [C D]] [0 0 -0 2] [[1] [0.5] [-1 1] [-1 1]] B} {[[C] [A B] [B D] [A] [D] [B]] [0 0 2 0 1.5 0] [[1] [1 1] [-1 1] [1.5] [0.75] [3]] C}]
Var Pseudo Name Pretty Printed START
Original Variable B

Pseudo Names For Var
0   [B]
1   [A]
2   [A C]
3   [C D]

Scaled Multipliers
0   [1]
1   [0.5]
2   [-1 1]
3   [-1 1]

Lone Number Vals
0   0
1   0
2   -0
3   2
Var Pseudo Name Pretty Printed END
Var Pseudo Name Pretty Printed START
Original Variable C

Pseudo Names For Var
0   [C]
1   [A B]
2   [B D]
3   [A]
4   [D]
5   [B]

Scaled Multipliers
0   [1]
1   [1 1]
2   [-1 1]
3   [1.5]
4   [0.75]
5   [3]

Lone Number Vals
0   0
1   0
2   2
3   0
4   1.5
5   0
Var Pseudo Name Pretty Printed END
Cursor Value
[]int{0, 1}
[]string{"B"}
[]float64{1}
0
-1
[]string{"A", "B"}
[]float64{1, 1}
0
1
output alias
{[{A 1}] [{B -1} {A 1} {B 1}] [-0] [-0 -0 0]}
output alias
{[{A 0}] [] [-0] [0]}
error cleaning alias AddPseudoNameSubToDatabase
error error 
[]int{0, 1}
[]int{4, 6}
[]int{0, 2}
[]int{4, 6}
Alias Input
( -1.000000*A) =   (1.000000*B) +  (1.000000*C) +(0.000000)
Alias Scaled Down
( 1.000000*A) =   (-1.000000*B) +  (-1.000000*C) +(0.000000)
PseudoNamesChosen
[{[[B] [A] [A C] [C D]] [0 0 -0 2] [[1] [0.5] [-1 1] [-1 1]] B} {[[C] [A B] [B D] [A] [D] [B]] [0 0 2 0 1.5 0] [[1] [1 1] [-1 1] [1.5] [0.75] [3]] C}]
Var Pseudo Name Pretty Printed START
Original Variable B

Pseudo Names For Var
0   [B]
1   [A]
2   [A C]
3   [C D]

Scaled Multipliers
0   [1]
1   [0.5]
2   [-1 1]
3   [-1 1]

Lone Number Vals
0   0
1   0
2   -0
3   2
Var Pseudo Name Pretty Printed END
Var Pseudo Name Pretty Printed START
Original Variable C

Pseudo Names For Var
0   [C]
1   [A B]
2   [B D]
3   [A]
4   [D]
5   [B]

Scaled Multipliers
0   [1]
1   [1 1]
2   [-1 1]
3   [1.5]
4   [0.75]
5   [3]

Lone Number Vals
0   0
1   0
2   2
3   0
4   1.5
5   0
Var Pseudo Name Pretty Printed END
Cursor Value
[]int{0, 3}
[]string{"B"}
[]float64{1}
0
-1
[]string{"A"}
[]float64{1.5}
0
1
output alias
( -0.500000*A) =   (-1.000000*B) +(0.000000)
output alias
( -0.500000*A) =   (-1.000000*B) +(0.000000)
[]int{0, 3}
[]int{4, 6}
[]int{0, 4}
[]int{4, 6}
Alias Input
( -1.000000*A) =   (1.000000*B) +  (1.000000*C) +(0.000000)
Alias Scaled Down
( 1.000000*A) =   (-1.000000*B) +  (-1.000000*C) +(0.000000)
PseudoNamesChosen
[{[[B] [A] [A C] [C D]] [0 0 -0 2] [[1] [0.5] [-1 1] [-1 1]] B} {[[C] [A B] [B D] [A] [D] [B]] [0 0 2 0 1.5 0] [[1] [1 1] [-1 1] [1.5] [0.75] [3]] C}]
Var Pseudo Name Pretty Printed START
Original Variable B

Pseudo Names For Var
0   [B]
1   [A]
2   [A C]
3   [C D]

Scaled Multipliers
0   [1]
1   [0.5]
2   [-1 1]
3   [-1 1]

Lone Number Vals
0   0
1   0
2   -0
3   2
Var Pseudo Name Pretty Printed END
Var Pseudo Name Pretty Printed START
Original Variable C

Pseudo Names For Var
0   [C]
1   [A B]
2   [B D]
3   [A]
4   [D]
5   [B]

Scaled Multipliers
0   [1]
1   [1 1]
2   [-1 1]
3   [1.5]
4   [0.75]
5   [3]

Lone Number Vals
0   0
1   0
2   2
3   0
4   1.5
5   0
Var Pseudo Name Pretty Printed END
Cursor Value
[]int{0, 5}
[]string{"B"}
[]float64{1}
0
-1
[]string{"B"}
[]float64{3}
0
1
output alias
( 1.000000*A) =   (2.000000*B) +(0.000000)
output alias
( 1.000000*A) =   (2.000000*B) +(0.000000)
[]int{0, 5}
[]int{4, 6}
Alias Input
( -1.000000*A) =   (1.000000*B) +  (1.000000*C) +(0.000000)
Alias Scaled Down
( 1.000000*A) =   (-1.000000*B) +  (-1.000000*C) +(0.000000)
PseudoNamesChosen
[{[[B] [A] [A C] [C D]] [0 0 -0 2] [[1] [0.5] [-1 1] [-1 1]] B} {[[C] [A B] [B D] [A] [D] [B]] [0 0 2 0 1.5 0] [[1] [1 1] [-1 1] [1.5] [0.75] [3]] C}]
Var Pseudo Name Pretty Printed START
Original Variable B

Pseudo Names For Var
0   [B]
1   [A]
2   [A C]
3   [C D]

Scaled Multipliers
0   [1]
1   [0.5]
2   [-1 1]
3   [-1 1]

Lone Number Vals
0   0
1   0
2   -0
3   2
Var Pseudo Name Pretty Printed END
Var Pseudo Name Pretty Printed START
Original Variable C

Pseudo Names For Var
0   [C]
1   [A B]
2   [B D]
3   [A]
4   [D]
5   [B]

Scaled Multipliers
0   [1]
1   [1 1]
2   [-1 1]
3   [1.5]
4   [0.75]
5   [3]

Lone Number Vals
0   0
1   0
2   2
3   0
4   1.5
5   0
Var Pseudo Name Pretty Printed END
Cursor Value
[]int{1, 0}
[]string{"A"}
[]float64{0.5}
0
-1
[]string{"C"}
[]float64{1}
0
1
output alias
( 1.500000*A) =   (1.000000*C) +(0.000000)
output alias
( 1.500000*A) =   (1.000000*C) +(0.000000)

NEW VAL ADDED TO DATABASE
( 1.500000*A) =   (1.000000*C) +(0.000000)
START---- Printing Alias Database
0( 2.000000*A) =   (1.000000*D) +(2.000000)
1( 2.000000*B) =   (1.000000*A) +(0.000000)
2( 1.000000*C) =   (1.000000*A) +  (1.000000*B) +(0.000000)
3( 1.000000*D) =   (1.000000*C) +  (1.000000*B) +(-2.000000)
4( -1.000000*D) =   (-2.000000*A) +(2.000000)
5( -1.000000*A) =   (-2.000000*B) +(0.000000)
6( -1.000000*A) =   (1.000000*B) +  (1.000000*C) +(0.000000)
7( -1.000000*B) =   (1.000000*A) +  (1.000000*C) +(0.000000)
8( -1.000000*C) =   (1.000000*B) +  (1.000000*D) +(-2.000000)
9( -1.000000*B) =   (1.000000*C) +  (1.000000*D) +(-2.000000)
10( 1.000000*C) =   (1.500000*A) +(0.000000)
11( 2.000000*C) =   (1.500000*D) +(3.000000)
12( 1.000000*C) =   (3.000000*B) +(0.000000)
13{[{D 0.25}] [] [0] [-0.5]}
14( 0.250000*D) =   (1.000000*B) +(-0.500000)
15( -0.750000*D) =   (-1.000000*C) +(1.500000)
16{[{A -0.5}] [] [-0] [0]}
17( 1.500000*A) =   (1.000000*C) +(0.000000)
END---- Printing Alias Database
[]int{1, 0}
[]int{4, 6}
Alias Input
( -1.000000*A) =   (1.000000*B) +  (1.000000*C) +(0.000000)
Alias Scaled Down
( 1.000000*A) =   (-1.000000*B) +  (-1.000000*C) +(0.000000)
PseudoNamesChosen
[{[[B] [A] [A C] [C D]] [0 0 -0 2] [[1] [0.5] [-1 1] [-1 1]] B} {[[C] [A B] [B D] [A] [D] [B]] [0 0 2 0 1.5 0] [[1] [1 1] [-1 1] [1.5] [0.75] [3]] C}]
Var Pseudo Name Pretty Printed START
Original Variable B

Pseudo Names For Var
0   [B]
1   [A]
2   [A C]
3   [C D]

Scaled Multipliers
0   [1]
1   [0.5]
2   [-1 1]
3   [-1 1]

Lone Number Vals
0   0
1   0
2   -0
3   2
Var Pseudo Name Pretty Printed END
Var Pseudo Name Pretty Printed START
Original Variable C

Pseudo Names For Var
0   [C]
1   [A B]
2   [B D]
3   [A]
4   [D]
5   [B]

Scaled Multipliers
0   [1]
1   [1 1]
2   [-1 1]
3   [1.5]
4   [0.75]
5   [3]

Lone Number Vals
0   0
1   0
2   2
3   0
4   1.5
5   0
Var Pseudo Name Pretty Printed END
Cursor Value
[]int{1, 1}
[]string{"A"}
[]float64{0.5}
0
-1
[]string{"A", "B"}
[]float64{1, 1}
0
1
output alias
( 0.500000*A) =   (1.000000*B) +(0.000000)
output alias
( 0.500000*A) =   (1.000000*B) +(0.000000)
[]int{1, 1}
[]int{4, 6}
[]int{1, 2}
[]int{4, 6}
Alias Input
( -1.000000*A) =   (1.000000*B) +  (1.000000*C) +(0.000000)
Alias Scaled Down
( 1.000000*A) =   (-1.000000*B) +  (-1.000000*C) +(0.000000)
PseudoNamesChosen
[{[[B] [A] [A C] [C D]] [0 0 -0 2] [[1] [0.5] [-1 1] [-1 1]] B} {[[C] [A B] [B D] [A] [D] [B]] [0 0 2 0 1.5 0] [[1] [1 1] [-1 1] [1.5] [0.75] [3]] C}]
Var Pseudo Name Pretty Printed START
Original Variable B

Pseudo Names For Var
0   [B]
1   [A]
2   [A C]
3   [C D]

Scaled Multipliers
0   [1]
1   [0.5]
2   [-1 1]
3   [-1 1]

Lone Number Vals
0   0
1   0
2   -0
3   2
Var Pseudo Name Pretty Printed END
Var Pseudo Name Pretty Printed START
Original Variable C

Pseudo Names For Var
0   [C]
1   [A B]
2   [B D]
3   [A]
4   [D]
5   [B]

Scaled Multipliers
0   [1]
1   [1 1]
2   [-1 1]
3   [1.5]
4   [0.75]
5   [3]

Lone Number Vals
0   0
1   0
2   2
3   0
4   1.5
5   0
Var Pseudo Name Pretty Printed END
Cursor Value
[]int{1, 3}
[]string{"A"}
[]float64{0.5}
0
-1
[]string{"A"}
[]float64{1.5}
0
1
output alias
{[{A 1}] [{A -0.5} {A 1.5}] [-0] [-0 -0 0]}
output alias
{[{A 0}] [] [-0] [0]}
error cleaning alias AddPseudoNameSubToDatabase
error error 
[]int{1, 3}
[]int{4, 6}
Alias Input
( -1.000000*A) =   (1.000000*B) +  (1.000000*C) +(0.000000)
Alias Scaled Down
( 1.000000*A) =   (-1.000000*B) +  (-1.000000*C) +(0.000000)
PseudoNamesChosen
[{[[B] [A] [A C] [C D]] [0 0 -0 2] [[1] [0.5] [-1 1] [-1 1]] B} {[[C] [A B] [B D] [A] [D] [B]] [0 0 2 0 1.5 0] [[1] [1 1] [-1 1] [1.5] [0.75] [3]] C}]
Var Pseudo Name Pretty Printed START
Original Variable B

Pseudo Names For Var
0   [B]
1   [A]
2   [A C]
3   [C D]

Scaled Multipliers
0   [1]
1   [0.5]
2   [-1 1]
3   [-1 1]

Lone Number Vals
0   0
1   0
2   -0
3   2
Var Pseudo Name Pretty Printed END
Var Pseudo Name Pretty Printed START
Original Variable C

Pseudo Names For Var
0   [C]
1   [A B]
2   [B D]
3   [A]
4   [D]
5   [B]

Scaled Multipliers
0   [1]
1   [1 1]
2   [-1 1]
3   [1.5]
4   [0.75]
5   [3]

Lone Number Vals
0   0
1   0
2   2
3   0
4   1.5
5   0
Var Pseudo Name Pretty Printed END
Cursor Value
[]int{1, 4}
[]string{"A"}
[]float64{0.5}
0
-1
[]string{"D"}
[]float64{0.75}
1.5
1
output alias
( 1.500000*A) =   (0.750000*D) +(1.500000)
output alias
( 1.500000*A) =   (0.750000*D) +(1.500000)
[]int{1, 4}
[]int{4, 6}
Alias Input
( -1.000000*A) =   (1.000000*B) +  (1.000000*C) +(0.000000)
Alias Scaled Down
( 1.000000*A) =   (-1.000000*B) +  (-1.000000*C) +(0.000000)
PseudoNamesChosen
[{[[B] [A] [A C] [C D]] [0 0 -0 2] [[1] [0.5] [-1 1] [-1 1]] B} {[[C] [A B] [B D] [A] [D] [B]] [0 0 2 0 1.5 0] [[1] [1 1] [-1 1] [1.5] [0.75] [3]] C}]
Var Pseudo Name Pretty Printed START
Original Variable B

Pseudo Names For Var
0   [B]
1   [A]
2   [A C]
3   [C D]

Scaled Multipliers
0   [1]
1   [0.5]
2   [-1 1]
3   [-1 1]

Lone Number Vals
0   0
1   0
2   -0
3   2
Var Pseudo Name Pretty Printed END
Var Pseudo Name Pretty Printed START
Original Variable C

Pseudo Names For Var
0   [C]
1   [A B]
2   [B D]
3   [A]
4   [D]
5   [B]

Scaled Multipliers
0   [1]
1   [1 1]
2   [-1 1]
3   [1.5]
4   [0.75]
5   [3]

Lone Number Vals
0   0
1   0
2   2
3   0
4   1.5
5   0
Var Pseudo Name Pretty Printed END
Cursor Value
[]int{1, 5}
[]string{"A"}
[]float64{0.5}
0
-1
[]string{"B"}
[]float64{3}
0
1
output alias
( 1.500000*A) =   (3.000000*B) +(0.000000)
output alias
( 1.500000*A) =   (3.000000*B) +(0.000000)
[]int{1, 5}
[]int{4, 6}
Alias Input
( -1.000000*A) =   (1.000000*B) +  (1.000000*C) +(0.000000)
Alias Scaled Down
( 1.000000*A) =   (-1.000000*B) +  (-1.000000*C) +(0.000000)
PseudoNamesChosen
[{[[B] [A] [A C] [C D]] [0 0 -0 2] [[1] [0.5] [-1 1] [-1 1]] B} {[[C] [A B] [B D] [A] [D] [B]] [0 0 2 0 1.5 0] [[1] [1 1] [-1 1] [1.5] [0.75] [3]] C}]
Var Pseudo Name Pretty Printed START
Original Variable B

Pseudo Names For Var
0   [B]
1   [A]
2   [A C]
3   [C D]

Scaled Multipliers
0   [1]
1   [0.5]
2   [-1 1]
3   [-1 1]

Lone Number Vals
0   0
1   0
2   -0
3   2
Var Pseudo Name Pretty Printed END
Var Pseudo Name Pretty Printed START
Original Variable C

Pseudo Names For Var
0   [C]
1   [A B]
2   [B D]
3   [A]
4   [D]
5   [B]

Scaled Multipliers
0   [1]
1   [1 1]
2   [-1 1]
3   [1.5]
4   [0.75]
5   [3]

Lone Number Vals
0   0
1   0
2   2
3   0
4   1.5
5   0
Var Pseudo Name Pretty Printed END
Cursor Value
[]int{2, 0}
[]string{"A", "C"}
[]float64{-1, 1}
-0
-1
[]string{"C"}
[]float64{1}
0
1
output alias
{[{A 1}] [{A 1} {C -1} {C 1}] [-0] [-0 0 0]}
output alias
{[{A 0}] [] [-0] [0]}
error cleaning alias AddPseudoNameSubToDatabase
error error 
[]int{2, 0}
[]int{4, 6}
[]int{2, 1}
[]int{4, 6}
[]int{2, 2}
[]int{4, 6}
Alias Input
( -1.000000*A) =   (1.000000*B) +  (1.000000*C) +(0.000000)
Alias Scaled Down
( 1.000000*A) =   (-1.000000*B) +  (-1.000000*C) +(0.000000)
PseudoNamesChosen
[{[[B] [A] [A C] [C D]] [0 0 -0 2] [[1] [0.5] [-1 1] [-1 1]] B} {[[C] [A B] [B D] [A] [D] [B]] [0 0 2 0 1.5 0] [[1] [1 1] [-1 1] [1.5] [0.75] [3]] C}]
Var Pseudo Name Pretty Printed START
Original Variable B

Pseudo Names For Var
0   [B]
1   [A]
2   [A C]
3   [C D]

Scaled Multipliers
0   [1]
1   [0.5]
2   [-1 1]
3   [-1 1]

Lone Number Vals
0   0
1   0
2   -0
3   2
Var Pseudo Name Pretty Printed END
Var Pseudo Name Pretty Printed START
Original Variable C

Pseudo Names For Var
0   [C]
1   [A B]
2   [B D]
3   [A]
4   [D]
5   [B]

Scaled Multipliers
0   [1]
1   [1 1]
2   [-1 1]
3   [1.5]
4   [0.75]
5   [3]

Lone Number Vals
0   0
1   0
2   2
3   0
4   1.5
5   0
Var Pseudo Name Pretty Printed END
Cursor Value
[]int{2, 3}
[]string{"A", "C"}
[]float64{-1, 1}
-0
-1
[]string{"A"}
[]float64{1.5}
0
1
output alias
( -1.500000*A) =   (-1.000000*C) +(0.000000)
output alias
( -1.500000*A) =   (-1.000000*C) +(0.000000)
[]int{2, 3}
[]int{4, 6}
[]int{2, 4}
[]int{4, 6}
[]int{2, 5}
[]int{4, 6}
[]int{3, 0}
[]int{4, 6}
[]int{3, 1}
[]int{4, 6}
[]int{3, 2}
[]int{4, 6}
[]int{3, 3}
[]int{4, 6}
[]int{3, 4}
[]int{4, 6}
[]int{3, 5}
[]int{4, 6}
cursor is maxed out
input alias
( -1.000000*A) =   (1.000000*B) +  (1.000000*C) +(0.000000)
chosen vars
[]main.VarPseudoNames{main.VarPseudoNames{PseudoNames:[][]string{[]string{"C"}, []string{"A", "B"}, []string{"B", "D"}, []string{"A"}, []string{"D"}, []string{"B"}}, LoneNumberVals:[]float64{0, 0, 2, 0, 1.5, 0}, ScaledDownMultipliers:[][]float64{[]float64{1}, []float64{1, 1}, []float64{-1, 1}, []float64{1.5}, []float64{0.75}, []float64{3}}, ParentVar:"C"}}
cursor slice
[]int{3}
[]string{"A"}
[]float64{1.5}
0
1
{[{A -0.5}] [] [-0] [0]}
true
hello!!!!
main.ConcreteSolution{Name:"A", Value:0}
max combos
3
[]int{0}
[]int{6}
[]int{1}
[]int{6}
[]int{2}
[]int{6}
[]int{3}
[]int{6}
[]int{4}
[]int{6}
Alias Input
( -1.000000*B) =   (1.000000*A) +  (1.000000*C) +(0.000000)
Alias Scaled Down
( 1.000000*B) =   (-1.000000*A) +  (-1.000000*C) +(0.000000)
PseudoNamesChosen
[{[[C] [A B] [B D] [A] [D] [B]] [0 0 2 0 1.5 0] [[1] [1 1] [-1 1] [1.5] [0.75] [3]] C}]
Var Pseudo Name Pretty Printed START
Original Variable C

Pseudo Names For Var
0   [C]
1   [A B]
2   [B D]
3   [A]
4   [D]
5   [B]

Scaled Multipliers
0   [1]
1   [1 1]
2   [-1 1]
3   [1.5]
4   [0.75]
5   [3]

Lone Number Vals
0   0
1   0
2   2
3   0
4   1.5
5   0
Var Pseudo Name Pretty Printed END
Cursor Value
[]int{5}
[]string{"B"}
[]float64{3}
0
1
output alias
{[{B 1}] [{B 3}] [-0] [-0 0]}
output alias
{[{B -2}] [] [-0] [0]}

NEW VAL ADDED TO DATABASE
{[{B -2}] [] [-0] [0]}
START---- Printing Alias Database
0( 2.000000*A) =   (1.000000*D) +(2.000000)
1( 2.000000*B) =   (1.000000*A) +(0.000000)
2( 1.000000*C) =   (1.000000*A) +  (1.000000*B) +(0.000000)
3( 1.000000*D) =   (1.000000*C) +  (1.000000*B) +(-2.000000)
4( -1.000000*D) =   (-2.000000*A) +(2.000000)
5( -1.000000*A) =   (-2.000000*B) +(0.000000)
6( -1.000000*A) =   (1.000000*B) +  (1.000000*C) +(0.000000)
7( -1.000000*B) =   (1.000000*A) +  (1.000000*C) +(0.000000)
8( -1.000000*C) =   (1.000000*B) +  (1.000000*D) +(-2.000000)
9( -1.000000*B) =   (1.000000*C) +  (1.000000*D) +(-2.000000)
10( 1.000000*C) =   (1.500000*A) +(0.000000)
11( 2.000000*C) =   (1.500000*D) +(3.000000)
12( 1.000000*C) =   (3.000000*B) +(0.000000)
13{[{D 0.25}] [] [0] [-0.5]}
14( 0.250000*D) =   (1.000000*B) +(-0.500000)
15( -0.750000*D) =   (-1.000000*C) +(1.500000)
16{[{A -0.5}] [] [-0] [0]}
17( 1.500000*A) =   (1.000000*C) +(0.000000)
18{[{B -2}] [] [-0] [0]}
END---- Printing Alias Database
[]int{5}
[]int{6}
cursor is maxed out
[]int{0}
[]int{5}
[]int{1}
[]int{5}
Alias Input
( -1.000000*B) =   (1.000000*A) +  (1.000000*C) +(0.000000)
Alias Scaled Down
( 1.000000*B) =   (-1.000000*A) +  (-1.000000*C) +(0.000000)
PseudoNamesChosen
[{[[A] [D] [B] [B C] [C]] [0 1 -0 -0 0] [[1] [0.5] [2] [-1 1] [0.6666666666666666]] A}]
Var Pseudo Name Pretty Printed START
Original Variable A

Pseudo Names For Var
0   [A]
1   [D]
2   [B]
3   [B C]
4   [C]

Scaled Multipliers
0   [1]
1   [0.5]
2   [2]
3   [-1 1]
4   [0.6666666666666666]

Lone Number Vals
0   0
1   1
2   -0
3   -0
4   0
Var Pseudo Name Pretty Printed END
Cursor Value
[]int{2}
[]string{"B"}
[]float64{2}
-0
-1
output alias
{[{B 1}] [{B -2}] [-0] [-0 0]}
output alias
{[{B 3}] [] [-0] [0]}
[]int{2}
[]int{5}
[]int{3}
[]int{5}
[]int{4}
[]int{5}
cursor is maxed out
[]int{0, 0}
[]int{5, 6}
Alias Input
( -1.000000*B) =   (1.000000*A) +  (1.000000*C) +(0.000000)
Alias Scaled Down
( 1.000000*B) =   (-1.000000*A) +  (-1.000000*C) +(0.000000)
PseudoNamesChosen
[{[[A] [D] [B] [B C] [C]] [0 1 -0 -0 0] [[1] [0.5] [2] [-1 1] [0.6666666666666666]] A} {[[C] [A B] [B D] [A] [D] [B]] [0 0 2 0 1.5 0] [[1] [1 1] [-1 1] [1.5] [0.75] [3]] C}]
Var Pseudo Name Pretty Printed START
Original Variable A

Pseudo Names For Var
0   [A]
1   [D]
2   [B]
3   [B C]
4   [C]

Scaled Multipliers
0   [1]
1   [0.5]
2   [2]
3   [-1 1]
4   [0.6666666666666666]

Lone Number Vals
0   0
1   1
2   -0
3   -0
4   0
Var Pseudo Name Pretty Printed END
Var Pseudo Name Pretty Printed START
Original Variable C

Pseudo Names For Var
0   [C]
1   [A B]
2   [B D]
3   [A]
4   [D]
5   [B]

Scaled Multipliers
0   [1]
1   [1 1]
2   [-1 1]
3   [1.5]
4   [0.75]
5   [3]

Lone Number Vals
0   0
1   0
2   2
3   0
4   1.5
5   0
Var Pseudo Name Pretty Printed END
Cursor Value
[]int{0, 1}
[]string{"A"}
[]float64{1}
0
-1
[]string{"A", "B"}
[]float64{1, 1}
0
1
output alias
{[{B 1}] [{A -1} {A 1} {B 1}] [-0] [-0 -0 0]}
output alias
{[{B 0}] [] [-0] [0]}
error cleaning alias AddPseudoNameSubToDatabase
error error 
[]int{0, 1}
[]int{5, 6}
[]int{0, 2}
[]int{5, 6}
Alias Input
( -1.000000*B) =   (1.000000*A) +  (1.000000*C) +(0.000000)
Alias Scaled Down
( 1.000000*B) =   (-1.000000*A) +  (-1.000000*C) +(0.000000)
PseudoNamesChosen
[{[[A] [D] [B] [B C] [C]] [0 1 -0 -0 0] [[1] [0.5] [2] [-1 1] [0.6666666666666666]] A} {[[C] [A B] [B D] [A] [D] [B]] [0 0 2 0 1.5 0] [[1] [1 1] [-1 1] [1.5] [0.75] [3]] C}]
Var Pseudo Name Pretty Printed START
Original Variable A

Pseudo Names For Var
0   [A]
1   [D]
2   [B]
3   [B C]
4   [C]

Scaled Multipliers
0   [1]
1   [0.5]
2   [2]
3   [-1 1]
4   [0.6666666666666666]

Lone Number Vals
0   0
1   1
2   -0
3   -0
4   0
Var Pseudo Name Pretty Printed END
Var Pseudo Name Pretty Printed START
Original Variable C

Pseudo Names For Var
0   [C]
1   [A B]
2   [B D]
3   [A]
4   [D]
5   [B]

Scaled Multipliers
0   [1]
1   [1 1]
2   [-1 1]
3   [1.5]
4   [0.75]
5   [3]

Lone Number Vals
0   0
1   0
2   2
3   0
4   1.5
5   0
Var Pseudo Name Pretty Printed END
Cursor Value
[]int{0, 3}
[]string{"A"}
[]float64{1}
0
-1
[]string{"A"}
[]float64{1.5}
0
1
output alias
( 1.000000*B) =   (0.500000*A) +(0.000000)
output alias
( 1.000000*B) =   (0.500000*A) +(0.000000)
[]int{0, 3}
[]int{5, 6}
[]int{0, 4}
[]int{5, 6}
Alias Input
( -1.000000*B) =   (1.000000*A) +  (1.000000*C) +(0.000000)
Alias Scaled Down
( 1.000000*B) =   (-1.000000*A) +  (-1.000000*C) +(0.000000)
PseudoNamesChosen
[{[[A] [D] [B] [B C] [C]] [0 1 -0 -0 0] [[1] [0.5] [2] [-1 1] [0.6666666666666666]] A} {[[C] [A B] [B D] [A] [D] [B]] [0 0 2 0 1.5 0] [[1] [1 1] [-1 1] [1.5] [0.75] [3]] C}]
Var Pseudo Name Pretty Printed START
Original Variable A

Pseudo Names For Var
0   [A]
1   [D]
2   [B]
3   [B C]
4   [C]

Scaled Multipliers
0   [1]
1   [0.5]
2   [2]
3   [-1 1]
4   [0.6666666666666666]

Lone Number Vals
0   0
1   1
2   -0
3   -0
4   0
Var Pseudo Name Pretty Printed END
Var Pseudo Name Pretty Printed START
Original Variable C

Pseudo Names For Var
0   [C]
1   [A B]
2   [B D]
3   [A]
4   [D]
5   [B]

Scaled Multipliers
0   [1]
1   [1 1]
2   [-1 1]
3   [1.5]
4   [0.75]
5   [3]

Lone Number Vals
0   0
1   0
2   2
3   0
4   1.5
5   0
Var Pseudo Name Pretty Printed END
Cursor Value
[]int{0, 5}
[]string{"A"}
[]float64{1}
0
-1
[]string{"B"}
[]float64{3}
0
1
output alias
( -2.000000*B) =   (-1.000000*A) +(0.000000)
output alias
( -2.000000*B) =   (-1.000000*A) +(0.000000)
[]int{0, 5}
[]int{5, 6}
[]int{1, 0}
[]int{5, 6}
[]int{1, 1}
[]int{5, 6}
Alias Input
( -1.000000*B) =   (1.000000*A) +  (1.000000*C) +(0.000000)
Alias Scaled Down
( 1.000000*B) =   (-1.000000*A) +  (-1.000000*C) +(0.000000)
PseudoNamesChosen
[{[[A] [D] [B] [B C] [C]] [0 1 -0 -0 0] [[1] [0.5] [2] [-1 1] [0.6666666666666666]] A} {[[C] [A B] [B D] [A] [D] [B]] [0 0 2 0 1.5 0] [[1] [1 1] [-1 1] [1.5] [0.75] [3]] C}]
Var Pseudo Name Pretty Printed START
Original Variable A

Pseudo Names For Var
0   [A]
1   [D]
2   [B]
3   [B C]
4   [C]

Scaled Multipliers
0   [1]
1   [0.5]
2   [2]
3   [-1 1]
4   [0.6666666666666666]

Lone Number Vals
0   0
1   1
2   -0
3   -0
4   0
Var Pseudo Name Pretty Printed END
Var Pseudo Name Pretty Printed START
Original Variable C

Pseudo Names For Var
0   [C]
1   [A B]
2   [B D]
3   [A]
4   [D]
5   [B]

Scaled Multipliers
0   [1]
1   [1 1]
2   [-1 1]
3   [1.5]
4   [0.75]
5   [3]

Lone Number Vals
0   0
1   0
2   2
3   0
4   1.5
5   0
Var Pseudo Name Pretty Printed END
Cursor Value
[]int{1, 2}
[]string{"D"}
[]float64{0.5}
1
-1
[]string{"B", "D"}
[]float64{-1, 1}
2
1
output alias
( 2.000000*B) =   (0.500000*D) +(1.000000)
output alias
( 2.000000*B) =   (0.500000*D) +(1.000000)

NEW VAL ADDED TO DATABASE
( 2.000000*B) =   (0.500000*D) +(1.000000)
START---- Printing Alias Database
0( 2.000000*A) =   (1.000000*D) +(2.000000)
1( 2.000000*B) =   (1.000000*A) +(0.000000)
2( 1.000000*C) =   (1.000000*A) +  (1.000000*B) +(0.000000)
3( 1.000000*D) =   (1.000000*C) +  (1.000000*B) +(-2.000000)
4( -1.000000*D) =   (-2.000000*A) +(2.000000)
5( -1.000000*A) =   (-2.000000*B) +(0.000000)
6( -1.000000*A) =   (1.000000*B) +  (1.000000*C) +(0.000000)
7( -1.000000*B) =   (1.000000*A) +  (1.000000*C) +(0.000000)
8( -1.000000*C) =   (1.000000*B) +  (1.000000*D) +(-2.000000)
9( -1.000000*B) =   (1.000000*C) +  (1.000000*D) +(-2.000000)
10( 1.000000*C) =   (1.500000*A) +(0.000000)
11( 2.000000*C) =   (1.500000*D) +(3.000000)
12( 1.000000*C) =   (3.000000*B) +(0.000000)
13{[{D 0.25}] [] [0] [-0.5]}
14( 0.250000*D) =   (1.000000*B) +(-0.500000)
15( -0.750000*D) =   (-1.000000*C) +(1.500000)
16{[{A -0.5}] [] [-0] [0]}
17( 1.500000*A) =   (1.000000*C) +(0.000000)
18{[{B -2}] [] [-0] [0]}
19( 2.000000*B) =   (0.500000*D) +(1.000000)
END---- Printing Alias Database
[]int{1, 2}
[]int{5, 6}
[]int{1, 3}
[]int{5, 6}
Alias Input
( -1.000000*B) =   (1.000000*A) +  (1.000000*C) +(0.000000)
Alias Scaled Down
( 1.000000*B) =   (-1.000000*A) +  (-1.000000*C) +(0.000000)
PseudoNamesChosen
[{[[A] [D] [B] [B C] [C]] [0 1 -0 -0 0] [[1] [0.5] [2] [-1 1] [0.6666666666666666]] A} {[[C] [A B] [B D] [A] [D] [B]] [0 0 2 0 1.5 0] [[1] [1 1] [-1 1] [1.5] [0.75] [3]] C}]
Var Pseudo Name Pretty Printed START
Original Variable A

Pseudo Names For Var
0   [A]
1   [D]
2   [B]
3   [B C]
4   [C]

Scaled Multipliers
0   [1]
1   [0.5]
2   [2]
3   [-1 1]
4   [0.6666666666666666]

Lone Number Vals
0   0
1   1
2   -0
3   -0
4   0
Var Pseudo Name Pretty Printed END
Var Pseudo Name Pretty Printed START
Original Variable C

Pseudo Names For Var
0   [C]
1   [A B]
2   [B D]
3   [A]
4   [D]
5   [B]

Scaled Multipliers
0   [1]
1   [1 1]
2   [-1 1]
3   [1.5]
4   [0.75]
5   [3]

Lone Number Vals
0   0
1   0
2   2
3   0
4   1.5
5   0
Var Pseudo Name Pretty Printed END
Cursor Value
[]int{1, 4}
[]string{"D"}
[]float64{0.5}
1
-1
[]string{"D"}
[]float64{0.75}
1.5
1
output alias
( 1.000000*B) =   (0.250000*D) +(0.500000)
output alias
( 1.000000*B) =   (0.250000*D) +(0.500000)
[]int{1, 4}
[]int{5, 6}
Alias Input
( -1.000000*B) =   (1.000000*A) +  (1.000000*C) +(0.000000)
Alias Scaled Down
( 1.000000*B) =   (-1.000000*A) +  (-1.000000*C) +(0.000000)
PseudoNamesChosen
[{[[A] [D] [B] [B C] [C]] [0 1 -0 -0 0] [[1] [0.5] [2] [-1 1] [0.6666666666666666]] A} {[[C] [A B] [B D] [A] [D] [B]] [0 0 2 0 1.5 0] [[1] [1 1] [-1 1] [1.5] [0.75] [3]] C}]
Var Pseudo Name Pretty Printed START
Original Variable A

Pseudo Names For Var
0   [A]
1   [D]
2   [B]
3   [B C]
4   [C]

Scaled Multipliers
0   [1]
1   [0.5]
2   [2]
3   [-1 1]
4   [0.6666666666666666]

Lone Number Vals
0   0
1   1
2   -0
3   -0
4   0
Var Pseudo Name Pretty Printed END
Var Pseudo Name Pretty Printed START
Original Variable C

Pseudo Names For Var
0   [C]
1   [A B]
2   [B D]
3   [A]
4   [D]
5   [B]

Scaled Multipliers
0   [1]
1   [1 1]
2   [-1 1]
3   [1.5]
4   [0.75]
5   [3]

Lone Number Vals
0   0
1   0
2   2
3   0
4   1.5
5   0
Var Pseudo Name Pretty Printed END
Cursor Value
[]int{1, 5}
[]string{"D"}
[]float64{0.5}
1
-1
[]string{"B"}
[]float64{3}
0
1
output alias
( -2.000000*B) =   (-0.500000*D) +(-1.000000)
output alias
( -2.000000*B) =   (-0.500000*D) +(-1.000000)
[]int{1, 5}
[]int{5, 6}
Alias Input
( -1.000000*B) =   (1.000000*A) +  (1.000000*C) +(0.000000)
Alias Scaled Down
( 1.000000*B) =   (-1.000000*A) +  (-1.000000*C) +(0.000000)
PseudoNamesChosen
[{[[A] [D] [B] [B C] [C]] [0 1 -0 -0 0] [[1] [0.5] [2] [-1 1] [0.6666666666666666]] A} {[[C] [A B] [B D] [A] [D] [B]] [0 0 2 0 1.5 0] [[1] [1 1] [-1 1] [1.5] [0.75] [3]] C}]
Var Pseudo Name Pretty Printed START
Original Variable A

Pseudo Names For Var
0   [A]
1   [D]
2   [B]
3   [B C]
4   [C]

Scaled Multipliers
0   [1]
1   [0.5]
2   [2]
3   [-1 1]
4   [0.6666666666666666]

Lone Number Vals
0   0
1   1
2   -0
3   -0
4   0
Var Pseudo Name Pretty Printed END
Var Pseudo Name Pretty Printed START
Original Variable C

Pseudo Names For Var
0   [C]
1   [A B]
2   [B D]
3   [A]
4   [D]
5   [B]

Scaled Multipliers
0   [1]
1   [1 1]
2   [-1 1]
3   [1.5]
4   [0.75]
5   [3]

Lone Number Vals
0   0
1   0
2   2
3   0
4   1.5
5   0
Var Pseudo Name Pretty Printed END
Cursor Value
[]int{2, 0}
[]string{"B"}
[]float64{2}
-0
-1
[]string{"C"}
[]float64{1}
0
1
output alias
( 3.000000*B) =   (1.000000*C) +(0.000000)
output alias
( 3.000000*B) =   (1.000000*C) +(0.000000)

NEW VAL ADDED TO DATABASE
( 3.000000*B) =   (1.000000*C) +(0.000000)
START---- Printing Alias Database
0( 2.000000*A) =   (1.000000*D) +(2.000000)
1( 2.000000*B) =   (1.000000*A) +(0.000000)
2( 1.000000*C) =   (1.000000*A) +  (1.000000*B) +(0.000000)
3( 1.000000*D) =   (1.000000*C) +  (1.000000*B) +(-2.000000)
4( -1.000000*D) =   (-2.000000*A) +(2.000000)
5( -1.000000*A) =   (-2.000000*B) +(0.000000)
6( -1.000000*A) =   (1.000000*B) +  (1.000000*C) +(0.000000)
7( -1.000000*B) =   (1.000000*A) +  (1.000000*C) +(0.000000)
8( -1.000000*C) =   (1.000000*B) +  (1.000000*D) +(-2.000000)
9( -1.000000*B) =   (1.000000*C) +  (1.000000*D) +(-2.000000)
10( 1.000000*C) =   (1.500000*A) +(0.000000)
11( 2.000000*C) =   (1.500000*D) +(3.000000)
12( 1.000000*C) =   (3.000000*B) +(0.000000)
13{[{D 0.25}] [] [0] [-0.5]}
14( 0.250000*D) =   (1.000000*B) +(-0.500000)
15( -0.750000*D) =   (-1.000000*C) +(1.500000)
16{[{A -0.5}] [] [-0] [0]}
17( 1.500000*A) =   (1.000000*C) +(0.000000)
18{[{B -2}] [] [-0] [0]}
19( 2.000000*B) =   (0.500000*D) +(1.000000)
20( 3.000000*B) =   (1.000000*C) +(0.000000)
END---- Printing Alias Database
[]int{2, 0}
[]int{5, 6}
Alias Input
( -1.000000*B) =   (1.000000*A) +  (1.000000*C) +(0.000000)
Alias Scaled Down
( 1.000000*B) =   (-1.000000*A) +  (-1.000000*C) +(0.000000)
PseudoNamesChosen
[{[[A] [D] [B] [B C] [C]] [0 1 -0 -0 0] [[1] [0.5] [2] [-1 1] [0.6666666666666666]] A} {[[C] [A B] [B D] [A] [D] [B]] [0 0 2 0 1.5 0] [[1] [1 1] [-1 1] [1.5] [0.75] [3]] C}]
Var Pseudo Name Pretty Printed START
Original Variable A

Pseudo Names For Var
0   [A]
1   [D]
2   [B]
3   [B C]
4   [C]

Scaled Multipliers
0   [1]
1   [0.5]
2   [2]
3   [-1 1]
4   [0.6666666666666666]

Lone Number Vals
0   0
1   1
2   -0
3   -0
4   0
Var Pseudo Name Pretty Printed END
Var Pseudo Name Pretty Printed START
Original Variable C

Pseudo Names For Var
0   [C]
1   [A B]
2   [B D]
3   [A]
4   [D]
5   [B]

Scaled Multipliers
0   [1]
1   [1 1]
2   [-1 1]
3   [1.5]
4   [0.75]
5   [3]

Lone Number Vals
0   0
1   0
2   2
3   0
4   1.5
5   0
Var Pseudo Name Pretty Printed END
Cursor Value
[]int{2, 1}
[]string{"B"}
[]float64{2}
-0
-1
[]string{"A", "B"}
[]float64{1, 1}
0
1
output alias
( 2.000000*B) =   (1.000000*A) +(0.000000)
output alias
( 2.000000*B) =   (1.000000*A) +(0.000000)
[]int{2, 1}
[]int{5, 6}
Alias Input
( -1.000000*B) =   (1.000000*A) +  (1.000000*C) +(0.000000)
Alias Scaled Down
( 1.000000*B) =   (-1.000000*A) +  (-1.000000*C) +(0.000000)
PseudoNamesChosen
[{[[A] [D] [B] [B C] [C]] [0 1 -0 -0 0] [[1] [0.5] [2] [-1 1] [0.6666666666666666]] A} {[[C] [A B] [B D] [A] [D] [B]] [0 0 2 0 1.5 0] [[1] [1 1] [-1 1] [1.5] [0.75] [3]] C}]
Var Pseudo Name Pretty Printed START
Original Variable A

Pseudo Names For Var
0   [A]
1   [D]
2   [B]
3   [B C]
4   [C]

Scaled Multipliers
0   [1]
1   [0.5]
2   [2]
3   [-1 1]
4   [0.6666666666666666]

Lone Number Vals
0   0
1   1
2   -0
3   -0
4   0
Var Pseudo Name Pretty Printed END
Var Pseudo Name Pretty Printed START
Original Variable C

Pseudo Names For Var
0   [C]
1   [A B]
2   [B D]
3   [A]
4   [D]
5   [B]

Scaled Multipliers
0   [1]
1   [1 1]
2   [-1 1]
3   [1.5]
4   [0.75]
5   [3]

Lone Number Vals
0   0
1   0
2   2
3   0
4   1.5
5   0
Var Pseudo Name Pretty Printed END
Cursor Value
[]int{2, 2}
[]string{"B"}
[]float64{2}
-0
-1
[]string{"B", "D"}
[]float64{-1, 1}
2
1
output alias
( 4.000000*B) =   (1.000000*D) +(2.000000)
output alias
( 4.000000*B) =   (1.000000*D) +(2.000000)
[]int{2, 2}
[]int{5, 6}
Alias Input
( -1.000000*B) =   (1.000000*A) +  (1.000000*C) +(0.000000)
Alias Scaled Down
( 1.000000*B) =   (-1.000000*A) +  (-1.000000*C) +(0.000000)
PseudoNamesChosen
[{[[A] [D] [B] [B C] [C]] [0 1 -0 -0 0] [[1] [0.5] [2] [-1 1] [0.6666666666666666]] A} {[[C] [A B] [B D] [A] [D] [B]] [0 0 2 0 1.5 0] [[1] [1 1] [-1 1] [1.5] [0.75] [3]] C}]
Var Pseudo Name Pretty Printed START
Original Variable A

Pseudo Names For Var
0   [A]
1   [D]
2   [B]
3   [B C]
4   [C]

Scaled Multipliers
0   [1]
1   [0.5]
2   [2]
3   [-1 1]
4   [0.6666666666666666]

Lone Number Vals
0   0
1   1
2   -0
3   -0
4   0
Var Pseudo Name Pretty Printed END
Var Pseudo Name Pretty Printed START
Original Variable C

Pseudo Names For Var
0   [C]
1   [A B]
2   [B D]
3   [A]
4   [D]
5   [B]

Scaled Multipliers
0   [1]
1   [1 1]
2   [-1 1]
3   [1.5]
4   [0.75]
5   [3]

Lone Number Vals
0   0
1   0
2   2
3   0
4   1.5
5   0
Var Pseudo Name Pretty Printed END
Cursor Value
[]int{2, 3}
[]string{"B"}
[]float64{2}
-0
-1
[]string{"A"}
[]float64{1.5}
0
1
output alias
( 3.000000*B) =   (1.500000*A) +(0.000000)
output alias
( 3.000000*B) =   (1.500000*A) +(0.000000)
[]int{2, 3}
[]int{5, 6}
Alias Input
( -1.000000*B) =   (1.000000*A) +  (1.000000*C) +(0.000000)
Alias Scaled Down
( 1.000000*B) =   (-1.000000*A) +  (-1.000000*C) +(0.000000)
PseudoNamesChosen
[{[[A] [D] [B] [B C] [C]] [0 1 -0 -0 0] [[1] [0.5] [2] [-1 1] [0.6666666666666666]] A} {[[C] [A B] [B D] [A] [D] [B]] [0 0 2 0 1.5 0] [[1] [1 1] [-1 1] [1.5] [0.75] [3]] C}]
Var Pseudo Name Pretty Printed START
Original Variable A

Pseudo Names For Var
0   [A]
1   [D]
2   [B]
3   [B C]
4   [C]

Scaled Multipliers
0   [1]
1   [0.5]
2   [2]
3   [-1 1]
4   [0.6666666666666666]

Lone Number Vals
0   0
1   1
2   -0
3   -0
4   0
Var Pseudo Name Pretty Printed END
Var Pseudo Name Pretty Printed START
Original Variable C

Pseudo Names For Var
0   [C]
1   [A B]
2   [B D]
3   [A]
4   [D]
5   [B]

Scaled Multipliers
0   [1]
1   [1 1]
2   [-1 1]
3   [1.5]
4   [0.75]
5   [3]

Lone Number Vals
0   0
1   0
2   2
3   0
4   1.5
5   0
Var Pseudo Name Pretty Printed END
Cursor Value
[]int{2, 4}
[]string{"B"}
[]float64{2}
-0
-1
[]string{"D"}
[]float64{0.75}
1.5
1
output alias
( 3.000000*B) =   (0.750000*D) +(1.500000)
output alias
( 3.000000*B) =   (0.750000*D) +(1.500000)
[]int{2, 4}
[]int{5, 6}
Alias Input
( -1.000000*B) =   (1.000000*A) +  (1.000000*C) +(0.000000)
Alias Scaled Down
( 1.000000*B) =   (-1.000000*A) +  (-1.000000*C) +(0.000000)
PseudoNamesChosen
[{[[A] [D] [B] [B C] [C]] [0 1 -0 -0 0] [[1] [0.5] [2] [-1 1] [0.6666666666666666]] A} {[[C] [A B] [B D] [A] [D] [B]] [0 0 2 0 1.5 0] [[1] [1 1] [-1 1] [1.5] [0.75] [3]] C}]
Var Pseudo Name Pretty Printed START
Original Variable A

Pseudo Names For Var
0   [A]
1   [D]
2   [B]
3   [B C]
4   [C]

Scaled Multipliers
0   [1]
1   [0.5]
2   [2]
3   [-1 1]
4   [0.6666666666666666]

Lone Number Vals
0   0
1   1
2   -0
3   -0
4   0
Var Pseudo Name Pretty Printed END
Var Pseudo Name Pretty Printed START
Original Variable C

Pseudo Names For Var
0   [C]
1   [A B]
2   [B D]
3   [A]
4   [D]
5   [B]

Scaled Multipliers
0   [1]
1   [1 1]
2   [-1 1]
3   [1.5]
4   [0.75]
5   [3]

Lone Number Vals
0   0
1   0
2   2
3   0
4   1.5
5   0
Var Pseudo Name Pretty Printed END
Cursor Value
[]int{2, 5}
[]string{"B"}
[]float64{2}
-0
-1
[]string{"B"}
[]float64{3}
0
1
output alias
{[{B 1}] [{B -2} {B 3}] [-0] [-0 0 0]}
output alias
{[{B 0}] [] [-0] [0]}
error cleaning alias AddPseudoNameSubToDatabase
error error 
[]int{2, 5}
[]int{5, 6}
Alias Input
( -1.000000*B) =   (1.000000*A) +  (1.000000*C) +(0.000000)
Alias Scaled Down
( 1.000000*B) =   (-1.000000*A) +  (-1.000000*C) +(0.000000)
PseudoNamesChosen
[{[[A] [D] [B] [B C] [C]] [0 1 -0 -0 0] [[1] [0.5] [2] [-1 1] [0.6666666666666666]] A} {[[C] [A B] [B D] [A] [D] [B]] [0 0 2 0 1.5 0] [[1] [1 1] [-1 1] [1.5] [0.75] [3]] C}]
Var Pseudo Name Pretty Printed START
Original Variable A

Pseudo Names For Var
0   [A]
1   [D]
2   [B]
3   [B C]
4   [C]

Scaled Multipliers
0   [1]
1   [0.5]
2   [2]
3   [-1 1]
4   [0.6666666666666666]

Lone Number Vals
0   0
1   1
2   -0
3   -0
4   0
Var Pseudo Name Pretty Printed END
Var Pseudo Name Pretty Printed START
Original Variable C

Pseudo Names For Var
0   [C]
1   [A B]
2   [B D]
3   [A]
4   [D]
5   [B]

Scaled Multipliers
0   [1]
1   [1 1]
2   [-1 1]
3   [1.5]
4   [0.75]
5   [3]

Lone Number Vals
0   0
1   0
2   2
3   0
4   1.5
5   0
Var Pseudo Name Pretty Printed END
Cursor Value
[]int{3, 0}
[]string{"B", "C"}
[]float64{-1, 1}
-0
-1
[]string{"C"}
[]float64{1}
0
1
output alias
{[{B 1}] [{B 1} {C -1} {C 1}] [-0] [-0 0 0]}
output alias
{[{B 0}] [] [-0] [0]}
error cleaning alias AddPseudoNameSubToDatabase
error error 
[]int{3, 0}
[]int{5, 6}
[]int{3, 1}
[]int{5, 6}
[]int{3, 2}
[]int{5, 6}
[]int{3, 3}
[]int{5, 6}
[]int{3, 4}
[]int{5, 6}
Alias Input
( -1.000000*B) =   (1.000000*A) +  (1.000000*C) +(0.000000)
Alias Scaled Down
( 1.000000*B) =   (-1.000000*A) +  (-1.000000*C) +(0.000000)
PseudoNamesChosen
[{[[A] [D] [B] [B C] [C]] [0 1 -0 -0 0] [[1] [0.5] [2] [-1 1] [0.6666666666666666]] A} {[[C] [A B] [B D] [A] [D] [B]] [0 0 2 0 1.5 0] [[1] [1 1] [-1 1] [1.5] [0.75] [3]] C}]
Var Pseudo Name Pretty Printed START
Original Variable A

Pseudo Names For Var
0   [A]
1   [D]
2   [B]
3   [B C]
4   [C]

Scaled Multipliers
0   [1]
1   [0.5]
2   [2]
3   [-1 1]
4   [0.6666666666666666]

Lone Number Vals
0   0
1   1
2   -0
3   -0
4   0
Var Pseudo Name Pretty Printed END
Var Pseudo Name Pretty Printed START
Original Variable C

Pseudo Names For Var
0   [C]
1   [A B]
2   [B D]
3   [A]
4   [D]
5   [B]

Scaled Multipliers
0   [1]
1   [1 1]
2   [-1 1]
3   [1.5]
4   [0.75]
5   [3]

Lone Number Vals
0   0
1   0
2   2
3   0
4   1.5
5   0
Var Pseudo Name Pretty Printed END
Cursor Value
[]int{3, 5}
[]string{"B", "C"}
[]float64{-1, 1}
-0
-1
[]string{"B"}
[]float64{3}
0
1
output alias
( -3.000000*B) =   (-1.000000*C) +(0.000000)
output alias
( -3.000000*B) =   (-1.000000*C) +(0.000000)
[]int{3, 5}
[]int{5, 6}
Alias Input
( -1.000000*B) =   (1.000000*A) +  (1.000000*C) +(0.000000)
Alias Scaled Down
( 1.000000*B) =   (-1.000000*A) +  (-1.000000*C) +(0.000000)
PseudoNamesChosen
[{[[A] [D] [B] [B C] [C]] [0 1 -0 -0 0] [[1] [0.5] [2] [-1 1] [0.6666666666666666]] A} {[[C] [A B] [B D] [A] [D] [B]] [0 0 2 0 1.5 0] [[1] [1 1] [-1 1] [1.5] [0.75] [3]] C}]
Var Pseudo Name Pretty Printed START
Original Variable A

Pseudo Names For Var
0   [A]
1   [D]
2   [B]
3   [B C]
4   [C]

Scaled Multipliers
0   [1]
1   [0.5]
2   [2]
3   [-1 1]
4   [0.6666666666666666]

Lone Number Vals
0   0
1   1
2   -0
3   -0
4   0
Var Pseudo Name Pretty Printed END
Var Pseudo Name Pretty Printed START
Original Variable C

Pseudo Names For Var
0   [C]
1   [A B]
2   [B D]
3   [A]
4   [D]
5   [B]

Scaled Multipliers
0   [1]
1   [1 1]
2   [-1 1]
3   [1.5]
4   [0.75]
5   [3]

Lone Number Vals
0   0
1   0
2   2
3   0
4   1.5
5   0
Var Pseudo Name Pretty Printed END
Cursor Value
[]int{4, 0}
[]string{"C"}
[]float64{0.6666666666666666}
0
-1
[]string{"C"}
[]float64{1}
0
1
output alias
( 1.000000*B) =   (0.333333*C) +(0.000000)
output alias
( 1.000000*B) =   (0.333333*C) +(0.000000)

NEW VAL ADDED TO DATABASE
( 1.000000*B) =   (0.333333*C) +(0.000000)
START---- Printing Alias Database
0( 2.000000*A) =   (1.000000*D) +(2.000000)
1( 2.000000*B) =   (1.000000*A) +(0.000000)
2( 1.000000*C) =   (1.000000*A) +  (1.000000*B) +(0.000000)
3( 1.000000*D) =   (1.000000*C) +  (1.000000*B) +(-2.000000)
4( -1.000000*D) =   (-2.000000*A) +(2.000000)
5( -1.000000*A) =   (-2.000000*B) +(0.000000)
6( -1.000000*A) =   (1.000000*B) +  (1.000000*C) +(0.000000)
7( -1.000000*B) =   (1.000000*A) +  (1.000000*C) +(0.000000)
8( -1.000000*C) =   (1.000000*B) +  (1.000000*D) +(-2.000000)
9( -1.000000*B) =   (1.000000*C) +  (1.000000*D) +(-2.000000)
10( 1.000000*C) =   (1.500000*A) +(0.000000)
11( 2.000000*C) =   (1.500000*D) +(3.000000)
12( 1.000000*C) =   (3.000000*B) +(0.000000)
13{[{D 0.25}] [] [0] [-0.5]}
14( 0.250000*D) =   (1.000000*B) +(-0.500000)
15( -0.750000*D) =   (-1.000000*C) +(1.500000)
16{[{A -0.5}] [] [-0] [0]}
17( 1.500000*A) =   (1.000000*C) +(0.000000)
18{[{B -2}] [] [-0] [0]}
19( 2.000000*B) =   (0.500000*D) +(1.000000)
20( 3.000000*B) =   (1.000000*C) +(0.000000)
21( 1.000000*B) =   (0.333333*C) +(0.000000)
END---- Printing Alias Database
[]int{4, 0}
[]int{5, 6}
[]int{4, 1}
[]int{5, 6}
[]int{4, 2}
[]int{5, 6}
[]int{4, 3}
[]int{5, 6}
[]int{4, 4}
[]int{5, 6}
Alias Input
( -1.000000*B) =   (1.000000*A) +  (1.000000*C) +(0.000000)
Alias Scaled Down
( 1.000000*B) =   (-1.000000*A) +  (-1.000000*C) +(0.000000)
PseudoNamesChosen
[{[[A] [D] [B] [B C] [C]] [0 1 -0 -0 0] [[1] [0.5] [2] [-1 1] [0.6666666666666666]] A} {[[C] [A B] [B D] [A] [D] [B]] [0 0 2 0 1.5 0] [[1] [1 1] [-1 1] [1.5] [0.75] [3]] C}]
Var Pseudo Name Pretty Printed START
Original Variable A

Pseudo Names For Var
0   [A]
1   [D]
2   [B]
3   [B C]
4   [C]

Scaled Multipliers
0   [1]
1   [0.5]
2   [2]
3   [-1 1]
4   [0.6666666666666666]

Lone Number Vals
0   0
1   1
2   -0
3   -0
4   0
Var Pseudo Name Pretty Printed END
Var Pseudo Name Pretty Printed START
Original Variable C

Pseudo Names For Var
0   [C]
1   [A B]
2   [B D]
3   [A]
4   [D]
5   [B]

Scaled Multipliers
0   [1]
1   [1 1]
2   [-1 1]
3   [1.5]
4   [0.75]
5   [3]

Lone Number Vals
0   0
1   0
2   2
3   0
4   1.5
5   0
Var Pseudo Name Pretty Printed END
Cursor Value
[]int{4, 5}
[]string{"C"}
[]float64{0.6666666666666666}
0
-1
[]string{"B"}
[]float64{3}
0
1
output alias
( -2.000000*B) =   (-0.666667*C) +(0.000000)
output alias
( -2.000000*B) =   (-0.666667*C) +(0.000000)
[]int{4, 5}
[]int{5, 6}
cursor is maxed out
input alias
( -1.000000*B) =   (1.000000*A) +  (1.000000*C) +(0.000000)
chosen vars
[]main.VarPseudoNames{main.VarPseudoNames{PseudoNames:[][]string{[]string{"C"}, []string{"A", "B"}, []string{"B", "D"}, []string{"A"}, []string{"D"}, []string{"B"}}, LoneNumberVals:[]float64{0, 0, 2, 0, 1.5, 0}, ScaledDownMultipliers:[][]float64{[]float64{1}, []float64{1, 1}, []float64{-1, 1}, []float64{1.5}, []float64{0.75}, []float64{3}}, ParentVar:"C"}}
cursor slice
[]int{5}
[]string{"B"}
[]float64{3}
0
1
{[{B -2}] [] [-0] [0]}
true
hello!!!!
main.ConcreteSolution{Name:"B", Value:0}
max combos
3
[]int{0}
[]int{5}
[]int{1}
[]int{5}
[]int{2}
[]int{5}
[]int{3}
[]int{5}
Alias Input
( -1.000000*C) =   (1.000000*B) +  (1.000000*D) +(-2.000000)
Alias Scaled Down
( 1.000000*C) =   (-1.000000*B) +  (-1.000000*D) +(2.000000)
PseudoNamesChosen
[{[[D] [C B] [A] [B] [C]] [0 -2 -2 -2 -2] [[1] [1 1] [2] [4] [1.3333333333333333]] D}]
Var Pseudo Name Pretty Printed START
Original Variable D

Pseudo Names For Var
0   [D]
1   [C B]
2   [A]
3   [B]
4   [C]

Scaled Multipliers
0   [1]
1   [1 1]
2   [2]
3   [4]
4   [1.3333333333333333]

Lone Number Vals
0   0
1   -2
2   -2
3   -2
4   -2
Var Pseudo Name Pretty Printed END
Cursor Value
[]int{4}
[]string{"C"}
[]float64{1.3333333333333333}
-2
1
output alias
{[{C 1}] [{C 1.3333333333333333}] [-0] [2 -2]}
output alias
{[{C -0.33333333333333326}] [] [-0] [0]}

NEW VAL ADDED TO DATABASE
{[{C -0.33333333333333326}] [] [-0] [0]}
START---- Printing Alias Database
0( 2.000000*A) =   (1.000000*D) +(2.000000)
1( 2.000000*B) =   (1.000000*A) +(0.000000)
2( 1.000000*C) =   (1.000000*A) +  (1.000000*B) +(0.000000)
3( 1.000000*D) =   (1.000000*C) +  (1.000000*B) +(-2.000000)
4( -1.000000*D) =   (-2.000000*A) +(2.000000)
5( -1.000000*A) =   (-2.000000*B) +(0.000000)
6( -1.000000*A) =   (1.000000*B) +  (1.000000*C) +(0.000000)
7( -1.000000*B) =   (1.000000*A) +  (1.000000*C) +(0.000000)
8( -1.000000*C) =   (1.000000*B) +  (1.000000*D) +(-2.000000)
9( -1.000000*B) =   (1.000000*C) +  (1.000000*D) +(-2.000000)
10( 1.000000*C) =   (1.500000*A) +(0.000000)
11( 2.000000*C) =   (1.500000*D) +(3.000000)
12( 1.000000*C) =   (3.000000*B) +(0.000000)
13{[{D 0.25}] [] [0] [-0.5]}
14( 0.250000*D) =   (1.000000*B) +(-0.500000)
15( -0.750000*D) =   (-1.000000*C) +(1.500000)
16{[{A -0.5}] [] [-0] [0]}
17( 1.500000*A) =   (1.000000*C) +(0.000000)
18{[{B -2}] [] [-0] [0]}
19( 2.000000*B) =   (0.500000*D) +(1.000000)
20( 3.000000*B) =   (1.000000*C) +(0.000000)
21( 1.000000*B) =   (0.333333*C) +(0.000000)
22{[{C -0.33333333333333326}] [] [-0] [0]}
END---- Printing Alias Database
[]int{4}
[]int{5}
cursor is maxed out
[]int{0}
[]int{6}
[]int{1}
[]int{6}
[]int{2}
[]int{6}
[]int{3}
[]int{6}
[]int{4}
[]int{6}
Alias Input
( -1.000000*C) =   (1.000000*B) +  (1.000000*D) +(-2.000000)
Alias Scaled Down
( 1.000000*C) =   (-1.000000*B) +  (-1.000000*D) +(2.000000)
PseudoNamesChosen
[{[[B] [A] [A C] [C D] [D] [C]] [0 0 -0 2 0.5 0] [[1] [0.5] [-1 1] [-1 1] [0.25] [0.3333333333333333]] B}]
Var Pseudo Name Pretty Printed START
Original Variable B

Pseudo Names For Var
0   [B]
1   [A]
2   [A C]
3   [C D]
4   [D]
5   [C]

Scaled Multipliers
0   [1]
1   [0.5]
2   [-1 1]
3   [-1 1]
4   [0.25]
5   [0.3333333333333333]

Lone Number Vals
0   0
1   0
2   -0
3   2
4   0.5
5   0
Var Pseudo Name Pretty Printed END
Cursor Value
[]int{5}
[]string{"C"}
[]float64{0.3333333333333333}
0
-1
output alias
{[{C 1}] [{C -0.3333333333333333}] [-0] [2 -0]}
output alias
{[{C 1.3333333333333333}] [] [-0] [2]}

NEW VAL ADDED TO DATABASE
{[{C 1.3333333333333333}] [] [-0] [2]}
START---- Printing Alias Database
0( 2.000000*A) =   (1.000000*D) +(2.000000)
1( 2.000000*B) =   (1.000000*A) +(0.000000)
2( 1.000000*C) =   (1.000000*A) +  (1.000000*B) +(0.000000)
3( 1.000000*D) =   (1.000000*C) +  (1.000000*B) +(-2.000000)
4( -1.000000*D) =   (-2.000000*A) +(2.000000)
5( -1.000000*A) =   (-2.000000*B) +(0.000000)
6( -1.000000*A) =   (1.000000*B) +  (1.000000*C) +(0.000000)
7( -1.000000*B) =   (1.000000*A) +  (1.000000*C) +(0.000000)
8( -1.000000*C) =   (1.000000*B) +  (1.000000*D) +(-2.000000)
9( -1.000000*B) =   (1.000000*C) +  (1.000000*D) +(-2.000000)
10( 1.000000*C) =   (1.500000*A) +(0.000000)
11( 2.000000*C) =   (1.500000*D) +(3.000000)
12( 1.000000*C) =   (3.000000*B) +(0.000000)
13{[{D 0.25}] [] [0] [-0.5]}
14( 0.250000*D) =   (1.000000*B) +(-0.500000)
15( -0.750000*D) =   (-1.000000*C) +(1.500000)
16{[{A -0.5}] [] [-0] [0]}
17( 1.500000*A) =   (1.000000*C) +(0.000000)
18{[{B -2}] [] [-0] [0]}
19( 2.000000*B) =   (0.500000*D) +(1.000000)
20( 3.000000*B) =   (1.000000*C) +(0.000000)
21( 1.000000*B) =   (0.333333*C) +(0.000000)
22{[{C -0.33333333333333326}] [] [-0] [0]}
23{[{C 1.3333333333333333}] [] [-0] [2]}
END---- Printing Alias Database
[]int{5}
[]int{6}
cursor is maxed out
[]int{0, 0}
[]int{6, 5}
Alias Input
( -1.000000*C) =   (1.000000*B) +  (1.000000*D) +(-2.000000)
Alias Scaled Down
( 1.000000*C) =   (-1.000000*B) +  (-1.000000*D) +(2.000000)
PseudoNamesChosen
[{[[B] [A] [A C] [C D] [D] [C]] [0 0 -0 2 0.5 0] [[1] [0.5] [-1 1] [-1 1] [0.25] [0.3333333333333333]] B} {[[D] [C B] [A] [B] [C]] [0 -2 -2 -2 -2] [[1] [1 1] [2] [4] [1.3333333333333333]] D}]
Var Pseudo Name Pretty Printed START
Original Variable B

Pseudo Names For Var
0   [B]
1   [A]
2   [A C]
3   [C D]
4   [D]
5   [C]

Scaled Multipliers
0   [1]
1   [0.5]
2   [-1 1]
3   [-1 1]
4   [0.25]
5   [0.3333333333333333]

Lone Number Vals
0   0
1   0
2   -0
3   2
4   0.5
5   0
Var Pseudo Name Pretty Printed END
Var Pseudo Name Pretty Printed START
Original Variable D

Pseudo Names For Var
0   [D]
1   [C B]
2   [A]
3   [B]
4   [C]

Scaled Multipliers
0   [1]
1   [1 1]
2   [2]
3   [4]
4   [1.3333333333333333]

Lone Number Vals
0   0
1   -2
2   -2
3   -2
4   -2
Var Pseudo Name Pretty Printed END
Cursor Value
[]int{0, 1}
[]string{"B"}
[]float64{1}
0
-1
[]string{"C", "B"}
[]float64{1, 1}
-2
1
output alias
{[{C 1}] [{B -1} {C 1} {B 1}] [-0] [2 -0 -2]}
output alias
{[{C 0}] [] [-0] [0]}
error cleaning alias AddPseudoNameSubToDatabase
error error 
[]int{0, 1}
[]int{6, 5}
[]int{0, 2}
[]int{6, 5}
Alias Input
( -1.000000*C) =   (1.000000*B) +  (1.000000*D) +(-2.000000)
Alias Scaled Down
( 1.000000*C) =   (-1.000000*B) +  (-1.000000*D) +(2.000000)
PseudoNamesChosen
[{[[B] [A] [A C] [C D] [D] [C]] [0 0 -0 2 0.5 0] [[1] [0.5] [-1 1] [-1 1] [0.25] [0.3333333333333333]] B} {[[D] [C B] [A] [B] [C]] [0 -2 -2 -2 -2] [[1] [1 1] [2] [4] [1.3333333333333333]] D}]
Var Pseudo Name Pretty Printed START
Original Variable B

Pseudo Names For Var
0   [B]
1   [A]
2   [A C]
3   [C D]
4   [D]
5   [C]

Scaled Multipliers
0   [1]
1   [0.5]
2   [-1 1]
3   [-1 1]
4   [0.25]
5   [0.3333333333333333]

Lone Number Vals
0   0
1   0
2   -0
3   2
4   0.5
5   0
Var Pseudo Name Pretty Printed END
Var Pseudo Name Pretty Printed START
Original Variable D

Pseudo Names For Var
0   [D]
1   [C B]
2   [A]
3   [B]
4   [C]

Scaled Multipliers
0   [1]
1   [1 1]
2   [2]
3   [4]
4   [1.3333333333333333]

Lone Number Vals
0   0
1   -2
2   -2
3   -2
4   -2
Var Pseudo Name Pretty Printed END
Cursor Value
[]int{0, 3}
[]string{"B"}
[]float64{1}
0
-1
[]string{"B"}
[]float64{4}
-2
1
output alias
( 1.000000*C) =   (3.000000*B) +(0.000000)
output alias
( 1.000000*C) =   (3.000000*B) +(0.000000)
[]int{0, 3}
[]int{6, 5}
Alias Input
( -1.000000*C) =   (1.000000*B) +  (1.000000*D) +(-2.000000)
Alias Scaled Down
( 1.000000*C) =   (-1.000000*B) +  (-1.000000*D) +(2.000000)
PseudoNamesChosen
[{[[B] [A] [A C] [C D] [D] [C]] [0 0 -0 2 0.5 0] [[1] [0.5] [-1 1] [-1 1] [0.25] [0.3333333333333333]] B} {[[D] [C B] [A] [B] [C]] [0 -2 -2 -2 -2] [[1] [1 1] [2] [4] [1.3333333333333333]] D}]
Var Pseudo Name Pretty Printed START
Original Variable B

Pseudo Names For Var
0   [B]
1   [A]
2   [A C]
3   [C D]
4   [D]
5   [C]

Scaled Multipliers
0   [1]
1   [0.5]
2   [-1 1]
3   [-1 1]
4   [0.25]
5   [0.3333333333333333]

Lone Number Vals
0   0
1   0
2   -0
3   2
4   0.5
5   0
Var Pseudo Name Pretty Printed END
Var Pseudo Name Pretty Printed START
Original Variable D

Pseudo Names For Var
0   [D]
1   [C B]
2   [A]
3   [B]
4   [C]

Scaled Multipliers
0   [1]
1   [1 1]
2   [2]
3   [4]
4   [1.3333333333333333]

Lone Number Vals
0   0
1   -2
2   -2
3   -2
4   -2
Var Pseudo Name Pretty Printed END
Cursor Value
[]int{0, 4}
[]string{"B"}
[]float64{1}
0
-1
[]string{"C"}
[]float64{1.3333333333333333}
-2
1
output alias
( -0.333333*C) =   (-1.000000*B) +(0.000000)
output alias
( -0.333333*C) =   (-1.000000*B) +(0.000000)

NEW VAL ADDED TO DATABASE
( -0.333333*C) =   (-1.000000*B) +(0.000000)
START---- Printing Alias Database
0( 2.000000*A) =   (1.000000*D) +(2.000000)
1( 2.000000*B) =   (1.000000*A) +(0.000000)
2( 1.000000*C) =   (1.000000*A) +  (1.000000*B) +(0.000000)
3( 1.000000*D) =   (1.000000*C) +  (1.000000*B) +(-2.000000)
4( -1.000000*D) =   (-2.000000*A) +(2.000000)
5( -1.000000*A) =   (-2.000000*B) +(0.000000)
6( -1.000000*A) =   (1.000000*B) +  (1.000000*C) +(0.000000)
7( -1.000000*B) =   (1.000000*A) +  (1.000000*C) +(0.000000)
8( -1.000000*C) =   (1.000000*B) +  (1.000000*D) +(-2.000000)
9( -1.000000*B) =   (1.000000*C) +  (1.000000*D) +(-2.000000)
10( 1.000000*C) =   (1.500000*A) +(0.000000)
11( 2.000000*C) =   (1.500000*D) +(3.000000)
12( 1.000000*C) =   (3.000000*B) +(0.000000)
13{[{D 0.25}] [] [0] [-0.5]}
14( 0.250000*D) =   (1.000000*B) +(-0.500000)
15( -0.750000*D) =   (-1.000000*C) +(1.500000)
16{[{A -0.5}] [] [-0] [0]}
17( 1.500000*A) =   (1.000000*C) +(0.000000)
18{[{B -2}] [] [-0] [0]}
19( 2.000000*B) =   (0.500000*D) +(1.000000)
20( 3.000000*B) =   (1.000000*C) +(0.000000)
21( 1.000000*B) =   (0.333333*C) +(0.000000)
22{[{C -0.33333333333333326}] [] [-0] [0]}
23{[{C 1.3333333333333333}] [] [-0] [2]}
24( -0.333333*C) =   (-1.000000*B) +(0.000000)
END---- Printing Alias Database
[]int{0, 4}
[]int{6, 5}
[]int{1, 0}
[]int{6, 5}
[]int{1, 1}
[]int{6, 5}
Alias Input
( -1.000000*C) =   (1.000000*B) +  (1.000000*D) +(-2.000000)
Alias Scaled Down
( 1.000000*C) =   (-1.000000*B) +  (-1.000000*D) +(2.000000)
PseudoNamesChosen
[{[[B] [A] [A C] [C D] [D] [C]] [0 0 -0 2 0.5 0] [[1] [0.5] [-1 1] [-1 1] [0.25] [0.3333333333333333]] B} {[[D] [C B] [A] [B] [C]] [0 -2 -2 -2 -2] [[1] [1 1] [2] [4] [1.3333333333333333]] D}]
Var Pseudo Name Pretty Printed START
Original Variable B

Pseudo Names For Var
0   [B]
1   [A]
2   [A C]
3   [C D]
4   [D]
5   [C]

Scaled Multipliers
0   [1]
1   [0.5]
2   [-1 1]
3   [-1 1]
4   [0.25]
5   [0.3333333333333333]

Lone Number Vals
0   0
1   0
2   -0
3   2
4   0.5
5   0
Var Pseudo Name Pretty Printed END
Var Pseudo Name Pretty Printed START
Original Variable D

Pseudo Names For Var
0   [D]
1   [C B]
2   [A]
3   [B]
4   [C]

Scaled Multipliers
0   [1]
1   [1 1]
2   [2]
3   [4]
4   [1.3333333333333333]

Lone Number Vals
0   0
1   -2
2   -2
3   -2
4   -2
Var Pseudo Name Pretty Printed END
Cursor Value
[]int{1, 2}
[]string{"A"}
[]float64{0.5}
0
-1
[]string{"A"}
[]float64{2}
-2
1
output alias
( 1.000000*C) =   (1.500000*A) +(0.000000)
output alias
( 1.000000*C) =   (1.500000*A) +(0.000000)
[]int{1, 2}
[]int{6, 5}
[]int{1, 3}
[]int{6, 5}
Alias Input
( -1.000000*C) =   (1.000000*B) +  (1.000000*D) +(-2.000000)
Alias Scaled Down
( 1.000000*C) =   (-1.000000*B) +  (-1.000000*D) +(2.000000)
PseudoNamesChosen
[{[[B] [A] [A C] [C D] [D] [C]] [0 0 -0 2 0.5 0] [[1] [0.5] [-1 1] [-1 1] [0.25] [0.3333333333333333]] B} {[[D] [C B] [A] [B] [C]] [0 -2 -2 -2 -2] [[1] [1 1] [2] [4] [1.3333333333333333]] D}]
Var Pseudo Name Pretty Printed START
Original Variable B

Pseudo Names For Var
0   [B]
1   [A]
2   [A C]
3   [C D]
4   [D]
5   [C]

Scaled Multipliers
0   [1]
1   [0.5]
2   [-1 1]
3   [-1 1]
4   [0.25]
5   [0.3333333333333333]

Lone Number Vals
0   0
1   0
2   -0
3   2
4   0.5
5   0
Var Pseudo Name Pretty Printed END
Var Pseudo Name Pretty Printed START
Original Variable D

Pseudo Names For Var
0   [D]
1   [C B]
2   [A]
3   [B]
4   [C]

Scaled Multipliers
0   [1]
1   [1 1]
2   [2]
3   [4]
4   [1.3333333333333333]

Lone Number Vals
0   0
1   -2
2   -2
3   -2
4   -2
Var Pseudo Name Pretty Printed END
Cursor Value
[]int{1, 4}
[]string{"A"}
[]float64{0.5}
0
-1
[]string{"C"}
[]float64{1.3333333333333333}
-2
1
output alias
( -0.333333*C) =   (-0.500000*A) +(0.000000)
output alias
( -0.333333*C) =   (-0.500000*A) +(0.000000)

NEW VAL ADDED TO DATABASE
( -0.333333*C) =   (-0.500000*A) +(0.000000)
START---- Printing Alias Database
0( 2.000000*A) =   (1.000000*D) +(2.000000)
1( 2.000000*B) =   (1.000000*A) +(0.000000)
2( 1.000000*C) =   (1.000000*A) +  (1.000000*B) +(0.000000)
3( 1.000000*D) =   (1.000000*C) +  (1.000000*B) +(-2.000000)
4( -1.000000*D) =   (-2.000000*A) +(2.000000)
5( -1.000000*A) =   (-2.000000*B) +(0.000000)
6( -1.000000*A) =   (1.000000*B) +  (1.000000*C) +(0.000000)
7( -1.000000*B) =   (1.000000*A) +  (1.000000*C) +(0.000000)
8( -1.000000*C) =   (1.000000*B) +  (1.000000*D) +(-2.000000)
9( -1.000000*B) =   (1.000000*C) +  (1.000000*D) +(-2.000000)
10( 1.000000*C) =   (1.500000*A) +(0.000000)
11( 2.000000*C) =   (1.500000*D) +(3.000000)
12( 1.000000*C) =   (3.000000*B) +(0.000000)
13{[{D 0.25}] [] [0] [-0.5]}
14( 0.250000*D) =   (1.000000*B) +(-0.500000)
15( -0.750000*D) =   (-1.000000*C) +(1.500000)
16{[{A -0.5}] [] [-0] [0]}
17( 1.500000*A) =   (1.000000*C) +(0.000000)
18{[{B -2}] [] [-0] [0]}
19( 2.000000*B) =   (0.500000*D) +(1.000000)
20( 3.000000*B) =   (1.000000*C) +(0.000000)
21( 1.000000*B) =   (0.333333*C) +(0.000000)
22{[{C -0.33333333333333326}] [] [-0] [0]}
23{[{C 1.3333333333333333}] [] [-0] [2]}
24( -0.333333*C) =   (-1.000000*B) +(0.000000)
25( -0.333333*C) =   (-0.500000*A) +(0.000000)
END---- Printing Alias Database
[]int{1, 4}
[]int{6, 5}
[]int{2, 0}
[]int{6, 5}
[]int{2, 1}
[]int{6, 5}
Alias Input
( -1.000000*C) =   (1.000000*B) +  (1.000000*D) +(-2.000000)
Alias Scaled Down
( 1.000000*C) =   (-1.000000*B) +  (-1.000000*D) +(2.000000)
PseudoNamesChosen
[{[[B] [A] [A C] [C D] [D] [C]] [0 0 -0 2 0.5 0] [[1] [0.5] [-1 1] [-1 1] [0.25] [0.3333333333333333]] B} {[[D] [C B] [A] [B] [C]] [0 -2 -2 -2 -2] [[1] [1 1] [2] [4] [1.3333333333333333]] D}]
Var Pseudo Name Pretty Printed START
Original Variable B

Pseudo Names For Var
0   [B]
1   [A]
2   [A C]
3   [C D]
4   [D]
5   [C]

Scaled Multipliers
0   [1]
1   [0.5]
2   [-1 1]
3   [-1 1]
4   [0.25]
5   [0.3333333333333333]

Lone Number Vals
0   0
1   0
2   -0
3   2
4   0.5
5   0
Var Pseudo Name Pretty Printed END
Var Pseudo Name Pretty Printed START
Original Variable D

Pseudo Names For Var
0   [D]
1   [C B]
2   [A]
3   [B]
4   [C]

Scaled Multipliers
0   [1]
1   [1 1]
2   [2]
3   [4]
4   [1.3333333333333333]

Lone Number Vals
0   0
1   -2
2   -2
3   -2
4   -2
Var Pseudo Name Pretty Printed END
Cursor Value
[]int{2, 2}
[]string{"A", "C"}
[]float64{-1, 1}
-0
-1
[]string{"A"}
[]float64{2}
-2
1
output alias
( 2.000000*C) =   (3.000000*A) +(0.000000)
output alias
( 2.000000*C) =   (3.000000*A) +(0.000000)
[]int{2, 2}
[]int{6, 5}
[]int{2, 3}
[]int{6, 5}
Alias Input
( -1.000000*C) =   (1.000000*B) +  (1.000000*D) +(-2.000000)
Alias Scaled Down
( 1.000000*C) =   (-1.000000*B) +  (-1.000000*D) +(2.000000)
PseudoNamesChosen
[{[[B] [A] [A C] [C D] [D] [C]] [0 0 -0 2 0.5 0] [[1] [0.5] [-1 1] [-1 1] [0.25] [0.3333333333333333]] B} {[[D] [C B] [A] [B] [C]] [0 -2 -2 -2 -2] [[1] [1 1] [2] [4] [1.3333333333333333]] D}]
Var Pseudo Name Pretty Printed START
Original Variable B

Pseudo Names For Var
0   [B]
1   [A]
2   [A C]
3   [C D]
4   [D]
5   [C]

Scaled Multipliers
0   [1]
1   [0.5]
2   [-1 1]
3   [-1 1]
4   [0.25]
5   [0.3333333333333333]

Lone Number Vals
0   0
1   0
2   -0
3   2
4   0.5
5   0
Var Pseudo Name Pretty Printed END
Var Pseudo Name Pretty Printed START
Original Variable D

Pseudo Names For Var
0   [D]
1   [C B]
2   [A]
3   [B]
4   [C]

Scaled Multipliers
0   [1]
1   [1 1]
2   [2]
3   [4]
4   [1.3333333333333333]

Lone Number Vals
0   0
1   -2
2   -2
3   -2
4   -2
Var Pseudo Name Pretty Printed END
Cursor Value
[]int{2, 4}
[]string{"A", "C"}
[]float64{-1, 1}
-0
-1
[]string{"C"}
[]float64{1.3333333333333333}
-2
1
output alias
( 0.666667*C) =   (1.000000*A) +(0.000000)
output alias
( 0.666667*C) =   (1.000000*A) +(0.000000)

NEW VAL ADDED TO DATABASE
( 0.666667*C) =   (1.000000*A) +(0.000000)
START---- Printing Alias Database
0( 2.000000*A) =   (1.000000*D) +(2.000000)
1( 2.000000*B) =   (1.000000*A) +(0.000000)
2( 1.000000*C) =   (1.000000*A) +  (1.000000*B) +(0.000000)
3( 1.000000*D) =   (1.000000*C) +  (1.000000*B) +(-2.000000)
4( -1.000000*D) =   (-2.000000*A) +(2.000000)
5( -1.000000*A) =   (-2.000000*B) +(0.000000)
6( -1.000000*A) =   (1.000000*B) +  (1.000000*C) +(0.000000)
7( -1.000000*B) =   (1.000000*A) +  (1.000000*C) +(0.000000)
8( -1.000000*C) =   (1.000000*B) +  (1.000000*D) +(-2.000000)
9( -1.000000*B) =   (1.000000*C) +  (1.000000*D) +(-2.000000)
10( 1.000000*C) =   (1.500000*A) +(0.000000)
11( 2.000000*C) =   (1.500000*D) +(3.000000)
12( 1.000000*C) =   (3.000000*B) +(0.000000)
13{[{D 0.25}] [] [0] [-0.5]}
14( 0.250000*D) =   (1.000000*B) +(-0.500000)
15( -0.750000*D) =   (-1.000000*C) +(1.500000)
16{[{A -0.5}] [] [-0] [0]}
17( 1.500000*A) =   (1.000000*C) +(0.000000)
18{[{B -2}] [] [-0] [0]}
19( 2.000000*B) =   (0.500000*D) +(1.000000)
20( 3.000000*B) =   (1.000000*C) +(0.000000)
21( 1.000000*B) =   (0.333333*C) +(0.000000)
22{[{C -0.33333333333333326}] [] [-0] [0]}
23{[{C 1.3333333333333333}] [] [-0] [2]}
24( -0.333333*C) =   (-1.000000*B) +(0.000000)
25( -0.333333*C) =   (-0.500000*A) +(0.000000)
26( 0.666667*C) =   (1.000000*A) +(0.000000)
END---- Printing Alias Database
[]int{2, 4}
[]int{6, 5}
Alias Input
( -1.000000*C) =   (1.000000*B) +  (1.000000*D) +(-2.000000)
Alias Scaled Down
( 1.000000*C) =   (-1.000000*B) +  (-1.000000*D) +(2.000000)
PseudoNamesChosen
[{[[B] [A] [A C] [C D] [D] [C]] [0 0 -0 2 0.5 0] [[1] [0.5] [-1 1] [-1 1] [0.25] [0.3333333333333333]] B} {[[D] [C B] [A] [B] [C]] [0 -2 -2 -2 -2] [[1] [1 1] [2] [4] [1.3333333333333333]] D}]
Var Pseudo Name Pretty Printed START
Original Variable B

Pseudo Names For Var
0   [B]
1   [A]
2   [A C]
3   [C D]
4   [D]
5   [C]

Scaled Multipliers
0   [1]
1   [0.5]
2   [-1 1]
3   [-1 1]
4   [0.25]
5   [0.3333333333333333]

Lone Number Vals
0   0
1   0
2   -0
3   2
4   0.5
5   0
Var Pseudo Name Pretty Printed END
Var Pseudo Name Pretty Printed START
Original Variable D

Pseudo Names For Var
0   [D]
1   [C B]
2   [A]
3   [B]
4   [C]

Scaled Multipliers
0   [1]
1   [1 1]
2   [2]
3   [4]
4   [1.3333333333333333]

Lone Number Vals
0   0
1   -2
2   -2
3   -2
4   -2
Var Pseudo Name Pretty Printed END
Cursor Value
[]int{3, 0}
[]string{"C", "D"}
[]float64{-1, 1}
2
-1
[]string{"D"}
[]float64{1}
0
1
output alias
{[{C 1}] [{C 1} {D -1} {D 1}] [-0] [2 -2 0]}
output alias
{[{C 0}] [] [-0] [0]}
error cleaning alias AddPseudoNameSubToDatabase
error error 
[]int{3, 0}
[]int{6, 5}
[]int{3, 1}
[]int{6, 5}
[]int{3, 2}
[]int{6, 5}
[]int{3, 3}
[]int{6, 5}
Alias Input
( -1.000000*C) =   (1.000000*B) +  (1.000000*D) +(-2.000000)
Alias Scaled Down
( 1.000000*C) =   (-1.000000*B) +  (-1.000000*D) +(2.000000)
PseudoNamesChosen
[{[[B] [A] [A C] [C D] [D] [C]] [0 0 -0 2 0.5 0] [[1] [0.5] [-1 1] [-1 1] [0.25] [0.3333333333333333]] B} {[[D] [C B] [A] [B] [C]] [0 -2 -2 -2 -2] [[1] [1 1] [2] [4] [1.3333333333333333]] D}]
Var Pseudo Name Pretty Printed START
Original Variable B

Pseudo Names For Var
0   [B]
1   [A]
2   [A C]
3   [C D]
4   [D]
5   [C]

Scaled Multipliers
0   [1]
1   [0.5]
2   [-1 1]
3   [-1 1]
4   [0.25]
5   [0.3333333333333333]

Lone Number Vals
0   0
1   0
2   -0
3   2
4   0.5
5   0
Var Pseudo Name Pretty Printed END
Var Pseudo Name Pretty Printed START
Original Variable D

Pseudo Names For Var
0   [D]
1   [C B]
2   [A]
3   [B]
4   [C]

Scaled Multipliers
0   [1]
1   [1 1]
2   [2]
3   [4]
4   [1.3333333333333333]

Lone Number Vals
0   0
1   -2
2   -2
3   -2
4   -2
Var Pseudo Name Pretty Printed END
Cursor Value
[]int{3, 4}
[]string{"C", "D"}
[]float64{-1, 1}
2
-1
[]string{"C"}
[]float64{1.3333333333333333}
-2
1
output alias
( -1.333333*C) =   (-1.000000*D) +(-2.000000)
output alias
( -1.333333*C) =   (-1.000000*D) +(-2.000000)

NEW VAL ADDED TO DATABASE
( -1.333333*C) =   (-1.000000*D) +(-2.000000)
START---- Printing Alias Database
0( 2.000000*A) =   (1.000000*D) +(2.000000)
1( 2.000000*B) =   (1.000000*A) +(0.000000)
2( 1.000000*C) =   (1.000000*A) +  (1.000000*B) +(0.000000)
3( 1.000000*D) =   (1.000000*C) +  (1.000000*B) +(-2.000000)
4( -1.000000*D) =   (-2.000000*A) +(2.000000)
5( -1.000000*A) =   (-2.000000*B) +(0.000000)
6( -1.000000*A) =   (1.000000*B) +  (1.000000*C) +(0.000000)
7( -1.000000*B) =   (1.000000*A) +  (1.000000*C) +(0.000000)
8( -1.000000*C) =   (1.000000*B) +  (1.000000*D) +(-2.000000)
9( -1.000000*B) =   (1.000000*C) +  (1.000000*D) +(-2.000000)
10( 1.000000*C) =   (1.500000*A) +(0.000000)
11( 2.000000*C) =   (1.500000*D) +(3.000000)
12( 1.000000*C) =   (3.000000*B) +(0.000000)
13{[{D 0.25}] [] [0] [-0.5]}
14( 0.250000*D) =   (1.000000*B) +(-0.500000)
15( -0.750000*D) =   (-1.000000*C) +(1.500000)
16{[{A -0.5}] [] [-0] [0]}
17( 1.500000*A) =   (1.000000*C) +(0.000000)
18{[{B -2}] [] [-0] [0]}
19( 2.000000*B) =   (0.500000*D) +(1.000000)
20( 3.000000*B) =   (1.000000*C) +(0.000000)
21( 1.000000*B) =   (0.333333*C) +(0.000000)
22{[{C -0.33333333333333326}] [] [-0] [0]}
23{[{C 1.3333333333333333}] [] [-0] [2]}
24( -0.333333*C) =   (-1.000000*B) +(0.000000)
25( -0.333333*C) =   (-0.500000*A) +(0.000000)
26( 0.666667*C) =   (1.000000*A) +(0.000000)
27( -1.333333*C) =   (-1.000000*D) +(-2.000000)
END---- Printing Alias Database
[]int{3, 4}
[]int{6, 5}
Alias Input
( -1.000000*C) =   (1.000000*B) +  (1.000000*D) +(-2.000000)
Alias Scaled Down
( 1.000000*C) =   (-1.000000*B) +  (-1.000000*D) +(2.000000)
PseudoNamesChosen
[{[[B] [A] [A C] [C D] [D] [C]] [0 0 -0 2 0.5 0] [[1] [0.5] [-1 1] [-1 1] [0.25] [0.3333333333333333]] B} {[[D] [C B] [A] [B] [C]] [0 -2 -2 -2 -2] [[1] [1 1] [2] [4] [1.3333333333333333]] D}]
Var Pseudo Name Pretty Printed START
Original Variable B

Pseudo Names For Var
0   [B]
1   [A]
2   [A C]
3   [C D]
4   [D]
5   [C]

Scaled Multipliers
0   [1]
1   [0.5]
2   [-1 1]
3   [-1 1]
4   [0.25]
5   [0.3333333333333333]

Lone Number Vals
0   0
1   0
2   -0
3   2
4   0.5
5   0
Var Pseudo Name Pretty Printed END
Var Pseudo Name Pretty Printed START
Original Variable D

Pseudo Names For Var
0   [D]
1   [C B]
2   [A]
3   [B]
4   [C]

Scaled Multipliers
0   [1]
1   [1 1]
2   [2]
3   [4]
4   [1.3333333333333333]

Lone Number Vals
0   0
1   -2
2   -2
3   -2
4   -2
Var Pseudo Name Pretty Printed END
Cursor Value
[]int{4, 0}
[]string{"D"}
[]float64{0.25}
0.5
-1
[]string{"D"}
[]float64{1}
0
1
output alias
( 1.000000*C) =   (0.750000*D) +(1.500000)
output alias
( 1.000000*C) =   (0.750000*D) +(1.500000)
[]int{4, 0}
[]int{6, 5}
[]int{4, 1}
[]int{6, 5}
[]int{4, 2}
[]int{6, 5}
[]int{4, 3}
[]int{6, 5}
Alias Input
( -1.000000*C) =   (1.000000*B) +  (1.000000*D) +(-2.000000)
Alias Scaled Down
( 1.000000*C) =   (-1.000000*B) +  (-1.000000*D) +(2.000000)
PseudoNamesChosen
[{[[B] [A] [A C] [C D] [D] [C]] [0 0 -0 2 0.5 0] [[1] [0.5] [-1 1] [-1 1] [0.25] [0.3333333333333333]] B} {[[D] [C B] [A] [B] [C]] [0 -2 -2 -2 -2] [[1] [1 1] [2] [4] [1.3333333333333333]] D}]
Var Pseudo Name Pretty Printed START
Original Variable B

Pseudo Names For Var
0   [B]
1   [A]
2   [A C]
3   [C D]
4   [D]
5   [C]

Scaled Multipliers
0   [1]
1   [0.5]
2   [-1 1]
3   [-1 1]
4   [0.25]
5   [0.3333333333333333]

Lone Number Vals
0   0
1   0
2   -0
3   2
4   0.5
5   0
Var Pseudo Name Pretty Printed END
Var Pseudo Name Pretty Printed START
Original Variable D

Pseudo Names For Var
0   [D]
1   [C B]
2   [A]
3   [B]
4   [C]

Scaled Multipliers
0   [1]
1   [1 1]
2   [2]
3   [4]
4   [1.3333333333333333]

Lone Number Vals
0   0
1   -2
2   -2
3   -2
4   -2
Var Pseudo Name Pretty Printed END
Cursor Value
[]int{4, 4}
[]string{"D"}
[]float64{0.25}
0.5
-1
[]string{"C"}
[]float64{1.3333333333333333}
-2
1
output alias
( -0.333333*C) =   (-0.250000*D) +(-0.500000)
output alias
( -0.333333*C) =   (-0.250000*D) +(-0.500000)
[]int{4, 4}
[]int{6, 5}
Alias Input
( -1.000000*C) =   (1.000000*B) +  (1.000000*D) +(-2.000000)
Alias Scaled Down
( 1.000000*C) =   (-1.000000*B) +  (-1.000000*D) +(2.000000)
PseudoNamesChosen
[{[[B] [A] [A C] [C D] [D] [C]] [0 0 -0 2 0.5 0] [[1] [0.5] [-1 1] [-1 1] [0.25] [0.3333333333333333]] B} {[[D] [C B] [A] [B] [C]] [0 -2 -2 -2 -2] [[1] [1 1] [2] [4] [1.3333333333333333]] D}]
Var Pseudo Name Pretty Printed START
Original Variable B

Pseudo Names For Var
0   [B]
1   [A]
2   [A C]
3   [C D]
4   [D]
5   [C]

Scaled Multipliers
0   [1]
1   [0.5]
2   [-1 1]
3   [-1 1]
4   [0.25]
5   [0.3333333333333333]

Lone Number Vals
0   0
1   0
2   -0
3   2
4   0.5
5   0
Var Pseudo Name Pretty Printed END
Var Pseudo Name Pretty Printed START
Original Variable D

Pseudo Names For Var
0   [D]
1   [C B]
2   [A]
3   [B]
4   [C]

Scaled Multipliers
0   [1]
1   [1 1]
2   [2]
3   [4]
4   [1.3333333333333333]

Lone Number Vals
0   0
1   -2
2   -2
3   -2
4   -2
Var Pseudo Name Pretty Printed END
Cursor Value
[]int{5, 0}
[]string{"C"}
[]float64{0.3333333333333333}
0
-1
[]string{"D"}
[]float64{1}
0
1
output alias
( 1.333333*C) =   (1.000000*D) +(2.000000)
output alias
( 1.333333*C) =   (1.000000*D) +(2.000000)
[]int{5, 0}
[]int{6, 5}
Alias Input
( -1.000000*C) =   (1.000000*B) +  (1.000000*D) +(-2.000000)
Alias Scaled Down
( 1.000000*C) =   (-1.000000*B) +  (-1.000000*D) +(2.000000)
PseudoNamesChosen
[{[[B] [A] [A C] [C D] [D] [C]] [0 0 -0 2 0.5 0] [[1] [0.5] [-1 1] [-1 1] [0.25] [0.3333333333333333]] B} {[[D] [C B] [A] [B] [C]] [0 -2 -2 -2 -2] [[1] [1 1] [2] [4] [1.3333333333333333]] D}]
Var Pseudo Name Pretty Printed START
Original Variable B

Pseudo Names For Var
0   [B]
1   [A]
2   [A C]
3   [C D]
4   [D]
5   [C]

Scaled Multipliers
0   [1]
1   [0.5]
2   [-1 1]
3   [-1 1]
4   [0.25]
5   [0.3333333333333333]

Lone Number Vals
0   0
1   0
2   -0
3   2
4   0.5
5   0
Var Pseudo Name Pretty Printed END
Var Pseudo Name Pretty Printed START
Original Variable D

Pseudo Names For Var
0   [D]
1   [C B]
2   [A]
3   [B]
4   [C]

Scaled Multipliers
0   [1]
1   [1 1]
2   [2]
3   [4]
4   [1.3333333333333333]

Lone Number Vals
0   0
1   -2
2   -2
3   -2
4   -2
Var Pseudo Name Pretty Printed END
Cursor Value
[]int{5, 1}
[]string{"C"}
[]float64{0.3333333333333333}
0
-1
[]string{"C", "B"}
[]float64{1, 1}
-2
1
output alias
( 0.333333*C) =   (1.000000*B) +(0.000000)
output alias
( 0.333333*C) =   (1.000000*B) +(0.000000)
[]int{5, 1}
[]int{6, 5}
Alias Input
( -1.000000*C) =   (1.000000*B) +  (1.000000*D) +(-2.000000)
Alias Scaled Down
( 1.000000*C) =   (-1.000000*B) +  (-1.000000*D) +(2.000000)
PseudoNamesChosen
[{[[B] [A] [A C] [C D] [D] [C]] [0 0 -0 2 0.5 0] [[1] [0.5] [-1 1] [-1 1] [0.25] [0.3333333333333333]] B} {[[D] [C B] [A] [B] [C]] [0 -2 -2 -2 -2] [[1] [1 1] [2] [4] [1.3333333333333333]] D}]
Var Pseudo Name Pretty Printed START
Original Variable B

Pseudo Names For Var
0   [B]
1   [A]
2   [A C]
3   [C D]
4   [D]
5   [C]

Scaled Multipliers
0   [1]
1   [0.5]
2   [-1 1]
3   [-1 1]
4   [0.25]
5   [0.3333333333333333]

Lone Number Vals
0   0
1   0
2   -0
3   2
4   0.5
5   0
Var Pseudo Name Pretty Printed END
Var Pseudo Name Pretty Printed START
Original Variable D

Pseudo Names For Var
0   [D]
1   [C B]
2   [A]
3   [B]
4   [C]

Scaled Multipliers
0   [1]
1   [1 1]
2   [2]
3   [4]
4   [1.3333333333333333]

Lone Number Vals
0   0
1   -2
2   -2
3   -2
4   -2
Var Pseudo Name Pretty Printed END
Cursor Value
[]int{5, 2}
[]string{"C"}
[]float64{0.3333333333333333}
0
-1
[]string{"A"}
[]float64{2}
-2
1
output alias
( 1.333333*C) =   (2.000000*A) +(0.000000)
output alias
( 1.333333*C) =   (2.000000*A) +(0.000000)
[]int{5, 2}
[]int{6, 5}
Alias Input
( -1.000000*C) =   (1.000000*B) +  (1.000000*D) +(-2.000000)
Alias Scaled Down
( 1.000000*C) =   (-1.000000*B) +  (-1.000000*D) +(2.000000)
PseudoNamesChosen
[{[[B] [A] [A C] [C D] [D] [C]] [0 0 -0 2 0.5 0] [[1] [0.5] [-1 1] [-1 1] [0.25] [0.3333333333333333]] B} {[[D] [C B] [A] [B] [C]] [0 -2 -2 -2 -2] [[1] [1 1] [2] [4] [1.3333333333333333]] D}]
Var Pseudo Name Pretty Printed START
Original Variable B

Pseudo Names For Var
0   [B]
1   [A]
2   [A C]
3   [C D]
4   [D]
5   [C]

Scaled Multipliers
0   [1]
1   [0.5]
2   [-1 1]
3   [-1 1]
4   [0.25]
5   [0.3333333333333333]

Lone Number Vals
0   0
1   0
2   -0
3   2
4   0.5
5   0
Var Pseudo Name Pretty Printed END
Var Pseudo Name Pretty Printed START
Original Variable D

Pseudo Names For Var
0   [D]
1   [C B]
2   [A]
3   [B]
4   [C]

Scaled Multipliers
0   [1]
1   [1 1]
2   [2]
3   [4]
4   [1.3333333333333333]

Lone Number Vals
0   0
1   -2
2   -2
3   -2
4   -2
Var Pseudo Name Pretty Printed END
Cursor Value
[]int{5, 3}
[]string{"C"}
[]float64{0.3333333333333333}
0
-1
[]string{"B"}
[]float64{4}
-2
1
output alias
( 1.333333*C) =   (4.000000*B) +(0.000000)
output alias
( 1.333333*C) =   (4.000000*B) +(0.000000)
[]int{5, 3}
[]int{6, 5}
Alias Input
( -1.000000*C) =   (1.000000*B) +  (1.000000*D) +(-2.000000)
Alias Scaled Down
( 1.000000*C) =   (-1.000000*B) +  (-1.000000*D) +(2.000000)
PseudoNamesChosen
[{[[B] [A] [A C] [C D] [D] [C]] [0 0 -0 2 0.5 0] [[1] [0.5] [-1 1] [-1 1] [0.25] [0.3333333333333333]] B} {[[D] [C B] [A] [B] [C]] [0 -2 -2 -2 -2] [[1] [1 1] [2] [4] [1.3333333333333333]] D}]
Var Pseudo Name Pretty Printed START
Original Variable B

Pseudo Names For Var
0   [B]
1   [A]
2   [A C]
3   [C D]
4   [D]
5   [C]

Scaled Multipliers
0   [1]
1   [0.5]
2   [-1 1]
3   [-1 1]
4   [0.25]
5   [0.3333333333333333]

Lone Number Vals
0   0
1   0
2   -0
3   2
4   0.5
5   0
Var Pseudo Name Pretty Printed END
Var Pseudo Name Pretty Printed START
Original Variable D

Pseudo Names For Var
0   [D]
1   [C B]
2   [A]
3   [B]
4   [C]

Scaled Multipliers
0   [1]
1   [1 1]
2   [2]
3   [4]
4   [1.3333333333333333]

Lone Number Vals
0   0
1   -2
2   -2
3   -2
4   -2
Var Pseudo Name Pretty Printed END
Cursor Value
[]int{5, 4}
[]string{"C"}
[]float64{0.3333333333333333}
0
-1
[]string{"C"}
[]float64{1.3333333333333333}
-2
1
output alias
{[{C 1}] [{C -0.3333333333333333} {C 1.3333333333333333}] [-0] [2 -0 -2]}
output alias
{[{C 0}] [] [-0] [0]}
error cleaning alias AddPseudoNameSubToDatabase
error error 
[]int{5, 4}
[]int{6, 5}
cursor is maxed out
input alias
( -1.000000*C) =   (1.000000*B) +  (1.000000*D) +(-2.000000)
chosen vars
[]main.VarPseudoNames{main.VarPseudoNames{PseudoNames:[][]string{[]string{"D"}, []string{"C", "B"}, []string{"A"}, []string{"B"}, []string{"C"}}, LoneNumberVals:[]float64{0, -2, -2, -2, -2}, ScaledDownMultipliers:[][]float64{[]float64{1}, []float64{1, 1}, []float64{2}, []float64{4}, []float64{1.3333333333333333}}, ParentVar:"D"}}
cursor slice
[]int{4}
[]string{"C"}
[]float64{1.3333333333333333}
-2
1
{[{C -0.33333333333333326}] [] [-0] [0]}
true
hello!!!!
main.ConcreteSolution{Name:"C", Value:0}
main.ConcreteSolution{Name:"D", Value:-0.5}
main.ConcreteSolution{Name:"A", Value:0}
main.ConcreteSolution{Name:"B", Value:0}
main.ConcreteSolution{Name:"C", Value:0}
exit status 1
FAIL	_/C_/Users/logan/Documents/GoPrograms/PartialFractionDecomposition	0.052s
